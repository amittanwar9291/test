// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RadioReport.AbdomenMRT.Repo;

namespace RadioReport.AbdomenMRT.Repo.Migrations
{
    [DbContext(typeof(AbdomenMRTDbContext))]
    [Migration("20210819100745_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.AdrenalGlandsFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AdrenalGlandsPageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("CMEnhancementQuantitativeType")
                        .HasColumnType("smallint");

                    b.Property<int>("DifferentialDiagnosis1Type")
                        .HasColumnType("integer");

                    b.Property<int>("DifferentialDiagnosis2Type")
                        .HasColumnType("integer");

                    b.Property<int>("DifferentialDiagnosisType")
                        .HasColumnType("integer");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FormType")
                        .HasColumnType("smallint");

                    b.Property<byte>("GrowthPatternsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("ImageFileId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsAtrophyOfTheRemainingAdrenalGland")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalcification")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiaphragm")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffusionRestriction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEquivalentToFat")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFatTissue")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFocalRegressiveChanges")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemorrhage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntracytoplasmicFat")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsKidneys")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLocoregionalLymphadenopathy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMacroscopicFat")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMidlineCrossing")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMusculature")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalDropInPhaseShift")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubordinate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSupradiaphragmaticSpread")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<byte>("LocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<string>("PictureNumber")
                        .HasColumnType("text");

                    b.Property<int?>("SecondPlaneInMm")
                        .HasColumnType("integer");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("text");

                    b.Property<byte>("SingalT1wType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SingalT2wType")
                        .HasColumnType("smallint");

                    b.Property<int?>("SizeInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("ThirdPlaneInMm")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AdrenalGlandsPageId");

                    b.HasIndex("ImageFileId");

                    b.ToTable("AdrenalGlandsFindings");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.AdrenalGlandsPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AreFindings")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("AdrenalGlandsPages");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.AnamnesisClinic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AnamnesisPageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("ClinicType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte?>("ParentNumber")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("ScopeId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AnamnesisPageId");

                    b.ToTable("AnamnesisClinic");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.AnamnesisIndication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AnamnesisPageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("AnastomosisOrganRegionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DetailsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("IndicationType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsAbscess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAnus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBiopsy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCaudateLobe")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsChemotherapy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsColon")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDuodenum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEsophagus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFistulaFormation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIleum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsJejunum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLeftLobeOfLiver")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPartialResection")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPostoperative")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsQuadrateLobe")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRadio")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsResection")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRightLobeOfLiver")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSigma")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStenting")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStomach")
                        .HasColumnType("boolean");

                    b.Property<byte>("LiverLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<int>("LiverSegmentsLocalizationType")
                        .HasColumnType("integer");

                    b.Property<byte?>("MonthOfFollowUpAfterTherapy")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("OrganRegionType")
                        .HasColumnType("smallint");

                    b.Property<byte?>("ParentNumber")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("ScopeId")
                        .HasColumnType("uuid");

                    b.Property<int?>("YearOfFollowUpAfterTherapy")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AnamnesisPageId");

                    b.ToTable("AnamnesisIndication");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.AnamnesisPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCTAbdomen")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMRIAbdomen")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPetCT")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSonographyAbdomen")
                        .HasColumnType("boolean");

                    b.Property<byte?>("MonthOfCT")
                        .HasColumnType("smallint");

                    b.Property<byte?>("MonthOfMRI")
                        .HasColumnType("smallint");

                    b.Property<byte?>("MonthOfPetCT")
                        .HasColumnType("smallint");

                    b.Property<byte?>("MonthOfSonography")
                        .HasColumnType("smallint");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<int?>("YearOfCT")
                        .HasColumnType("integer");

                    b.Property<int?>("YearOfMRI")
                        .HasColumnType("integer");

                    b.Property<int?>("YearOfPetCT")
                        .HasColumnType("integer");

                    b.Property<int?>("YearOfSonography")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("AnamnesisPages");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.CMSideEffect", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("CMSideEffectType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DurationAdverseReactionType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsCompletelyDeclining")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSeriousAdverseEvent")
                        .HasColumnType("boolean");

                    b.Property<int?>("MinAfterCMinjection")
                        .HasColumnType("integer");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("TechnologyPageId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TechnologyPageId");

                    b.ToTable("CMSideEffects");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.ExaminationRegionPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMRCP")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMRIAbdomen")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMRIAdrenalGlands")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMRIKidneys")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMRILiver")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMRIPancreas")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMRIRetroperitoneum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMRISellink")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMRIUpperAbdomen")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("ExaminationRegionPages");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.GastrointestinalTractFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AbdominalWallHerniaType")
                        .HasColumnType("smallint");

                    b.Property<int?>("AppendicoliteInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("AppendixExpansionInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("BowelDiverticulaMaximumDiameterInMm")
                        .HasColumnType("integer");

                    b.Property<int>("CddClassificationType")
                        .HasColumnType("integer");

                    b.Property<byte>("CharacteristicsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("CmEnhancementHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ComplicationCourseOfDiseaseType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementDistributionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementQuantitativeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DescriptionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DetailsType")
                        .HasColumnType("smallint");

                    b.Property<int>("DifferentialDiagnosis1Type")
                        .HasColumnType("integer");

                    b.Property<int>("DifferentialDiagnosis2Type")
                        .HasColumnType("integer");

                    b.Property<int>("DifferentialDiagnosisType")
                        .HasColumnType("integer");

                    b.Property<int>("EvaluationType")
                        .HasColumnType("integer");

                    b.Property<int?>("ExtensionHerniaSacInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("ExtensionHernialOrificeInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("ExtensionHernialOrificeSecondPlaneInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("ExtensionHernialOrificeThirdPlaneInMm")
                        .HasColumnType("integer");

                    b.Property<int>("ExtensionType")
                        .HasColumnType("integer");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FluidType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FormType")
                        .HasColumnType("smallint");

                    b.Property<int>("FromToType")
                        .HasColumnType("integer");

                    b.Property<byte>("GastricLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("GastrointestinalTractPageId")
                        .HasColumnType("uuid");

                    b.Property<int>("HansenAndStockType")
                        .HasColumnType("integer");

                    b.Property<byte>("HeightType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HerniaLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HistologyKnownType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("ImageFileId")
                        .HasColumnType("uuid");

                    b.Property<byte>("IntestinalMassExtensionType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsAbscess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAccentuatedMesentericVesselsCombSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsActiveBleeding")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdhesionsBrides")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdjacentFatTissue")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdjacentIntestine")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdrenalGland")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdrenalGlandLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdrenalGlandRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAnalCanal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAppendagitisEpiploica")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAppendicolite")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAppendixExpansion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsArterial")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAscendingColon")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAscites")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAtresia")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBariatricSurgery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBiliodigestiveAnastomosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBlindEndend")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBone")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBowelInAbnormalAnatomicPosition")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBraunAnastomosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCecum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCloacalFormation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsClosedLoop")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsColitis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCommunicating")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsContained")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsContrastEnhancementOfTheIntestinalWall")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCoprostasis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDescendingColon")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDesmoplasticReactionOfTheMesentery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffusionRestriction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDisplacing")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDistant")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiverticulitis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiverticulosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDuodenum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDuplications")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEndophytic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnlargedNonInflamedAppendix")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnteroCutaneous")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnteroEnteral")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnteroVaginal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnteroVesical")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnterocutaneous")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnterovaginal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnterovesical")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExophytic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExtraluminal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFistula")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFistulaFormation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFixedBowelLoops")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFluid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFocalReducedContrastEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFreeGas")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFundoplication")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGallstoneIleus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGastricBanding")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGeneralizedUniformGaseousDistensionOfTheLargeAndSmallBowel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHepaticFlexure")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHistologyKnown")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIleitis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIleum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIleus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIncarceration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIncisionalHernia")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInflammatory")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInflammatoryCoReactionOfTheMPsoas")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInterenteric")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntestinalLoops")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntraluminal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInvagination")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInvasive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIrregularCalcifications")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIschemicBowelSegments")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsJejunum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsJejunumIleum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsKidney")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsKidneyLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsKidneyRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLargeIntestine")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLittreRichterHernia")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLiver")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLocoregional")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLocoregionalLymphadenopathy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLumenExpansion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLymphadenopathy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMacroscopicFat")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMarginalContrastEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMass")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMechanicalIleus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMeckelSDiverticulum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMesentericFatTissue")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMesorectalFascia")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMucocele")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMucosalEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMucosalEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMultipleAbscesses")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNeoterminalIleum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsObstruction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOcclusive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOmentum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOneLesionOfTheSameEntity")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOvarianProcess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPancreas")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParenchymalOrgan")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParsAscendens")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParsDescendens")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParsHorizontalis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerforation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerifocalAbscess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerifocalFatStranding")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeritonealCarcinomatosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeritonealFolds")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeritonitis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerityphliticAbscess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPortalVenous")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPostoperativePostinterventional")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPrestenoticDilatation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPreterminalIleum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPseudotumor")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPseudotumorStenosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPunctateCalcifications")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRadiationInduced")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectumLowerThird")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectumMiddleThird")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectumUpperThird")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRetrocecalPositionOfTheAppendix")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRouxYReconstruction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsScarStenosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsScrotalHernia")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSeroma")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSigmoidColon")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalDropInTheOpposedPhaseChemicalShift")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignsOfSuperinfection")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSinusTract")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSmallIntestine")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSpleen")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSplenicFlexure")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStenosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStomachResection")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStrangulation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStricture")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubmucous")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubordinate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSurroundingMass")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspicionOfAbscess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspicionOfFreeGas")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTargetSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTerminalIleum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsToxicMegacolon")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTransmigratoryPeritonitis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTransmuralSpread")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTransverseColon")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUlceratingFinding")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVermiformAppendix")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVessels")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVolvulus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWallEdemaOfTheAdjacentIntestinalSegments")
                        .HasColumnType("boolean");

                    b.Property<byte>("LengthOfChangesInCmType")
                        .HasColumnType("smallint");

                    b.Property<int?>("LongitudinalExtensionInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("LumenExpansionInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("MarginType")
                        .HasColumnType("smallint");

                    b.Property<int?>("MassMaximumDiameterInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("MassType")
                        .HasColumnType("smallint");

                    b.Property<int?>("MaxPrestenoticDilatationInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("MaxSizeInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("MaximumDiameterLargeBowelInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("MaximumSmallBowelDiameterInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("MeasurementIntestinalWallInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("MechanicalLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<int>("MidlineHerniasType")
                        .HasColumnType("integer");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("PathogenesisType")
                        .HasColumnType("smallint");

                    b.Property<byte>("PerforationType")
                        .HasColumnType("smallint");

                    b.Property<string>("PictureNumber")
                        .HasColumnType("text");

                    b.Property<byte>("PoststenoticSegmentType")
                        .HasColumnType("smallint");

                    b.Property<int?>("PrestenoticDilatationMaximumDiameterInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("SadInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("SadLargestInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("SecondPlaneInMm")
                        .HasColumnType("integer");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("text");

                    b.Property<byte>("SideType")
                        .HasColumnType("smallint");

                    b.Property<int?>("SizeInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("StomachResectionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("T1WSignalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2WSignalType")
                        .HasColumnType("smallint");

                    b.Property<int?>("ThirdPlaneInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("TransitionalSegmentType")
                        .HasColumnType("smallint");

                    b.Property<byte>("TypeType")
                        .HasColumnType("smallint");

                    b.Property<int>("UntilType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GastrointestinalTractPageId");

                    b.HasIndex("ImageFileId");

                    b.ToTable("GastrointestinalTractFindings");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.GastrointestinalTractFindingPreset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("ContrastEnhancementQuantitativeType")
                        .HasColumnType("smallint");

                    b.Property<int>("DifferentialDiagnosisType")
                        .HasColumnType("integer");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FormType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("IntestinalMassExtensionType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsAdjacentFatTissue")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDisplacing")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInvasive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLocoregionalLymphadenopathy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLymphadenopathy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOcclusive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTransmuralSpread")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUlceratingFinding")
                        .HasColumnType("boolean");

                    b.Property<byte>("MarginType")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("T1WSignalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2WSignalType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("GastrointestinalTractFindingPresets");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.GastrointestinalTractPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AreFindings")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("GastrointestinalTractPages");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.KidneysFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AssociatedCausalFindingsType")
                        .HasColumnType("smallint");

                    b.Property<int>("BosniakClassificationType1")
                        .HasColumnType("integer");

                    b.Property<int>("BosniakClassificationType2")
                        .HasColumnType("integer");

                    b.Property<int>("BosniakClassificationType3")
                        .HasColumnType("integer");

                    b.Property<byte>("CalcificationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementQuantitativeStrongType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementRenalParenchymaQuantitative")
                        .HasColumnType("smallint");

                    b.Property<byte>("CorticomedullaryPhase")
                        .HasColumnType("smallint");

                    b.Property<int?>("CraniocaudalDiameterInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("DD1FollowUpMonths")
                        .HasColumnType("integer");

                    b.Property<byte>("DD1ModalityType")
                        .HasColumnType("smallint");

                    b.Property<int?>("DD2FollowUpMonths")
                        .HasColumnType("integer");

                    b.Property<byte>("DD2ModalityType")
                        .HasColumnType("smallint");

                    b.Property<int?>("DD3FollowUpMonths")
                        .HasColumnType("integer");

                    b.Property<byte>("DD3ModalityType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("DecreasedRenalVolumeImageFileId")
                        .HasColumnType("uuid");

                    b.Property<string>("DecreasedRenalVolumePictureNumber")
                        .HasColumnType("text");

                    b.Property<string>("DecreasedRenalVolumeSerialNumber")
                        .HasColumnType("text");

                    b.Property<byte>("DescriptionType")
                        .HasColumnType("smallint");

                    b.Property<int?>("DiameterKidneySecondPlaneInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("DiameterKidneyThirdPlaneInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("DilatationInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("DilatationOfTheRenalVeinInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("EnlargedUterusDetailsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ExcretoryPhase")
                        .HasColumnType("smallint");

                    b.Property<byte>("ExtensionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FatType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FormType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FusionAnomaliesKidneyType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HistologyKnownType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("IncreasedRenalVolumeImageFileId")
                        .HasColumnType("uuid");

                    b.Property<string>("IncreasedRenalVolumePictureNumber")
                        .HasColumnType("text");

                    b.Property<string>("IncreasedRenalVolumeSerialNumber")
                        .HasColumnType("text");

                    b.Property<bool>("IsAgenesis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAlteredRenalPerfusion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAmpullaryTypeOfRenalPelvis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAngularInterfaceSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAplasia")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAssociatedFindingsCalcification")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAssociatedFindingsNodularThickening")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAtrophy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBeanShaped")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBifurcatedLeftRenalVeinAnteriorAndPosteriorAorta")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalcification")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCentralScar")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCommunicationWithRenalPelvis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCompleteOcclusion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCompleteRenalCorticalNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCompletelyIntrarenal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsContrastEnhancementUreteralWall")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorticalCalcifications")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorticalRimSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCranialThird")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCysts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDDMass")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeformationCalices")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeformationOuterRenalContour")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeformationsBarkContour")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelicate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDetailsCompletelyIntrarenal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffusionRestriction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffusionRestrictionInTheThrombus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDilatationOfTheRenalPelvisAndTheRenalCalices")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDilatationUreter")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDisplacing")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDissectionRenalArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDoubleKidney")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDuplexCollectingSystem")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnlargementOfTheContralateralKidney")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExophytic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFat")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFibroticChangesOrScarTissue")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFillingDefectAfterContrastAdministration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFloatingKidney")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFluidAroundCyst")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFornixRupture")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFungalConfiguration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFusionAnomalies")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemorrhage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemosiderin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHistologyKnown")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHypoplasia")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIndurationPerirenal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfiltration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfiltrationAbdominalWall")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfiltrationAdrenalGlands")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfiltrationBones")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfiltrationIntestine")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfiltrationLiver")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfiltrationMusculature")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfiltrationPerirenalAdiposeTissue")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfiltrationPerirenalSpace")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfiltrationRenalPelvis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfiltrationSpleen")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntramuralInfiltration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIrregularNarrowingRenalParenchyma")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsKidneyMarrowFocal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLobarDysmorphia")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLocalization")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLocoregionalLN")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLossCorticomedullaryDifferentiation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLossOfParenchymaHydronephrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLowerPoleKidney")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLowerThird")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMiddleThird")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMissingCMEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMoreThanOneLesionSameEntity")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMultipleGasInclusions")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMultipleScars")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNarrowContrastedRimAroundCortex")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNodularThickening")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNodularThrombusEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNonrotation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsObstructionAndHydronephrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOnyMedullaryContrastEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOstiumLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOstiumRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPapillaryCalcifications")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerirenalFluid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPersistentFetalLobulation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPhlebolite")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPlaqueLikeGrowthRenalPelvis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPseudoCapsularExtension")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPyelonephritis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsReducedRenalParenchymaThickness")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsReductionCortexAndMedulla")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRenalCalice")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRenalCortexFocal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRenalEctopy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRenalHilus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRenalPelvis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRenalPelvisDilatation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRenalSinusCyst")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRetroperitonealCollateralVessels")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSepta")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSeptaCalcification")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsShrinkageInfarctedTissue")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSideDifferenceContrastEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSpokeWheelEnhancementPattern")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStenosisOrOcclusionRenalArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStreakyInflammatoryInfiltrationPerirenalAdiposeTissue")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubordinate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSwollenKidney")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsThickeningGerotaFascia")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTumorThrombosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUpperPoleKidney")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUreter")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUrethra")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUrinaryBladder")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVascularInfiltration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWedgeShapedDefect")
                        .HasColumnType("boolean");

                    b.Property<byte>("KidneyMarrowT1wSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("KidneyMarrowT2wSignal")
                        .HasColumnType("smallint");

                    b.Property<int>("KidneysDifferentialDiagnosisType")
                        .HasColumnType("integer");

                    b.Property<int>("KidneysDifferentialDiagnosisType1")
                        .HasColumnType("integer");

                    b.Property<int>("KidneysDifferentialDiagnosisType2")
                        .HasColumnType("integer");

                    b.Property<int>("KidneysDifferentialDiagnosisType3")
                        .HasColumnType("integer");

                    b.Property<Guid?>("KidneysPageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("LocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("MarginType")
                        .HasColumnType("smallint");

                    b.Property<int?>("MassChar2ExtensionSizeInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("MassChar2SecondPlaneInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("MassChar2ThirdPlaneInMm")
                        .HasColumnType("integer");

                    b.Property<Guid?>("MassImageFileId")
                        .HasColumnType("uuid");

                    b.Property<string>("MassPictureNumber")
                        .HasColumnType("text");

                    b.Property<string>("MassSerialNumber")
                        .HasColumnType("text");

                    b.Property<byte>("MassSideMoreThanOneLesionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("MassSideType")
                        .HasColumnType("smallint");

                    b.Property<int?>("MaxDiameterConcrementInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("MaxDilatationInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("MaxDilatationParenchymaInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("MultipleGasInclusionsLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("NephrographicPhase")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("NormVariantOrAnomalyImageFileId")
                        .HasColumnType("uuid");

                    b.Property<string>("NormVariantOrAnomalyPictureNumber")
                        .HasColumnType("text");

                    b.Property<string>("NormVariantOrAnomalySerialNumber")
                        .HasColumnType("text");

                    b.Property<byte>("NormVariantOrAnomalyType")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("ObstructiveNephropathyChar1ImageFileId")
                        .HasColumnType("uuid");

                    b.Property<string>("ObstructiveNephropathyChar1PictureNumber")
                        .HasColumnType("text");

                    b.Property<string>("ObstructiveNephropathyChar1SerialNumber")
                        .HasColumnType("text");

                    b.Property<Guid?>("ObstructiveNephropathyChar2ImageFileId")
                        .HasColumnType("uuid");

                    b.Property<string>("ObstructiveNephropathyChar2PictureNumber")
                        .HasColumnType("text");

                    b.Property<string>("ObstructiveNephropathyChar2SerialNumber")
                        .HasColumnType("text");

                    b.Property<byte>("PathologyType")
                        .HasColumnType("smallint");

                    b.Property<byte>("PolarArteryType")
                        .HasColumnType("smallint");

                    b.Property<byte>("RenalArteryType")
                        .HasColumnType("smallint");

                    b.Property<byte>("RenalCortexT1wSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("RenalCortexT2wSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("RenalInfarctionCharacterizationType")
                        .HasColumnType("smallint");

                    b.Property<int?>("RenalInfarctionExtensionSizeInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("RenalInfarctionLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<int?>("RenalInfarctionSecondPlaneInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("RenalInfarctionT1wSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("RenalInfarctionT2wSignal")
                        .HasColumnType("smallint");

                    b.Property<int?>("RenalInfarctionThirdPlaneInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("RenalVeinsType")
                        .HasColumnType("smallint");

                    b.Property<int?>("SADInMm")
                        .HasColumnType("integer");

                    b.Property<int>("SeverityType")
                        .HasColumnType("integer");

                    b.Property<byte>("SideType")
                        .HasColumnType("smallint");

                    b.Property<byte>("T1wSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2wSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("UreterType")
                        .HasColumnType("smallint");

                    b.Property<byte>("UrolithiasisDetailsUreterType")
                        .HasColumnType("smallint");

                    b.Property<byte>("VascularInfiltrationType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("VascularNephropathyImageFileId")
                        .HasColumnType("uuid");

                    b.Property<string>("VascularNephropathyPictureNumber")
                        .HasColumnType("text");

                    b.Property<string>("VascularNephropathySerialNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DecreasedRenalVolumeImageFileId");

                    b.HasIndex("IncreasedRenalVolumeImageFileId");

                    b.HasIndex("KidneysPageId");

                    b.HasIndex("MassImageFileId");

                    b.HasIndex("NormVariantOrAnomalyImageFileId");

                    b.HasIndex("ObstructiveNephropathyChar1ImageFileId");

                    b.HasIndex("ObstructiveNephropathyChar2ImageFileId");

                    b.HasIndex("VascularNephropathyImageFileId");

                    b.ToTable("KidneysFindings");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.KidneysFindingPreset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("CorticomedullaryPhase")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsDeformationOuterRenalContour")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDisplacing")
                        .HasColumnType("boolean");

                    b.Property<int>("KidneysDifferentialDiagnosisType")
                        .HasColumnType("integer");

                    b.Property<byte>("MarginType")
                        .HasColumnType("smallint");

                    b.Property<byte>("NephrographicPhase")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("T1wSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2wSignal")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("KidneysFindingPresets");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.KidneysPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AreFindings")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("KidneysPages");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.LiverFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AscitesType")
                        .HasColumnType("smallint");

                    b.Property<byte>("CharacteristicsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ClassificationCorletteType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ClassificationMcsherryType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DescriptionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DetailsStoneType")
                        .HasColumnType("smallint");

                    b.Property<int>("DifferentialDiagnosis")
                        .HasColumnType("integer");

                    b.Property<int>("DifferentialDiagnosis1")
                        .HasColumnType("integer");

                    b.Property<int>("DifferentialDiagnosis2")
                        .HasColumnType("integer");

                    b.Property<int>("DifferentialDiagnosis3")
                        .HasColumnType("integer");

                    b.Property<byte>("EarlyArterial")
                        .HasColumnType("smallint");

                    b.Property<byte>("Equilibrium")
                        .HasColumnType("smallint");

                    b.Property<int?>("ExtensionInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("ExtensionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FatType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FocalLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FormType")
                        .HasColumnType("smallint");

                    b.Property<byte>("GallbladderNormVariantPostoperativeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("GrowthPatternType")
                        .HasColumnType("smallint");

                    b.Property<int>("GrowthPatternsType")
                        .HasColumnType("integer");

                    b.Property<byte>("HistologyKnownType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<int>("HuangClassificationType")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ImageFileId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsAbscess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAbsenceOfWashout")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdjacentFluidFormation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAerobilia")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsArterioportalShunts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsArteriovenousShunts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAscites")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAssociatedCholestasis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBaseOfBladderFundus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBodyCorpus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalcification")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCaliberVariations")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCapsularRetraction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCavernousPortalVein")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCentral")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCentralScar")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCentrifugalEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCentripetalFillInIrisDiaphragmPhenomenon")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCholangitis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCollateralization")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCommonHepaticArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCommonHepaticDuct")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCommonOriginOfCeliacArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConcentricWallThickening")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConfluent")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorkscrewLikeHepaticArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCottonWoolAppearance")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCysticDilatationsOfBileDucts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCysticDuct")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffusionRestriction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDilatation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDoubleDuctSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEncapsulation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnhancementToHepaticVeins")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExtrahepatic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFadingEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFat")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFibrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFluidCsfIsointens")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGallBladder")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGasInclusion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGastroduodenalArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemorrhageProducts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHepaticArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHepaticFissureWidening")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHepaticVeins")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHepaticVeinsNotEvaluable")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHistologyKnown")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHuangClassification")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHypertrophyCaudateLobe")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHypertrophyLeftLiverLobe")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIncreasedContrastEnhancementLiverParenchyma")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIncreasedGallbladderWallEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInferiorVenaCava")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntestine")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntraductal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntrahepatic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntrahepaticBileDuctDilatation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntrahepaticStone")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntraluminalPolypoidMass")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntramuralGranulomas")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntramuralRokitanskyAschoff")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIrregularWallThickening")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLateEnhancementOfTheMassWallThickening")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLateVenousPooling")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLeftHepaticArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLeftHepaticDuct")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLeftHepaticVein")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLeftLobeOfLiver")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLeftPortalVein")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLiver")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLiverCapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLobusCaudatus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLobusQuadratus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLongSegmentalStricture")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMaskingVenousPhase")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMiddleHepaticVein")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMirizziSyndrome")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMoreThanOneLesionOfTheSameEntity")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMultifocalDilatationOfBileDucts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMuralCalcification")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNeckCollum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNodularSurface")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsObstructive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOcclusion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPancreas")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParaumbilical")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPartial")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPearlNecklaceSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerigastric")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeriosophageal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeripheralEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeripheralMembrane")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeriportalEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerisplenic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPortalVein")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPortalVeinLeftBranch")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPortalVeinProximal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPortalVeinRightBranch")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPortovenousShunts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsProperHepaticArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPseudostricture")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPseudostrictureSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPusInTheBileDuct")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRecanalizedUmbilicalVein")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRetroperitoneal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRightHepaticArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRightHepaticDuct")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRightHepaticVein")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRightLobeOfLiver")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRightPortalVein")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRingTargetSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSepts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsShortRightHepaticDuct")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalDrop")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalDropInChemicalShift")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignsOfInfection")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStomach")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStricture")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStringOfPearlsConfiguration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubocclusive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubordinate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsThrombosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTriangleSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTrifurcationHepaticArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTruncusCompletus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTruncusIncompletus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVPortaeDilatation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVPortaeProximal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVPortaeThrombosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWallDiscontinuity")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWallEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWashInArterialPhase")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWashOutVenousPhase")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWedgeShapedExtensionToPeriphery")
                        .HasColumnType("boolean");

                    b.Property<byte>("LateArterial")
                        .HasColumnType("smallint");

                    b.Property<int?>("LengthOfStrictureInMm")
                        .HasColumnType("integer");

                    b.Property<Guid?>("LiverPageId")
                        .HasColumnType("uuid");

                    b.Property<long>("LiverPathologyLocations")
                        .HasColumnType("bigint");

                    b.Property<long>("LiverPathologyLocations2")
                        .HasColumnType("bigint");

                    b.Property<int>("LiverSegmentsLocations")
                        .HasColumnType("integer");

                    b.Property<byte>("LiverSpecificContrastEnhancement")
                        .HasColumnType("smallint");

                    b.Property<byte>("MarginType")
                        .HasColumnType("smallint");

                    b.Property<int?>("MaxWallThicknessInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("MaxWidthOfTheCommonBileDuctInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("MaxWidthOfTheIntrahepaticInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("NodularSurfaceType")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<string>("PictureNumber")
                        .HasColumnType("text");

                    b.Property<byte>("PortalVenous")
                        .HasColumnType("smallint");

                    b.Property<byte>("QualityOfEnhancement")
                        .HasColumnType("smallint");

                    b.Property<int?>("SecondPlaneInMm")
                        .HasColumnType("integer");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("text");

                    b.Property<byte>("SignalDropType")
                        .HasColumnType("smallint");

                    b.Property<int?>("SizeInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("T1WSignalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2WSignalType")
                        .HasColumnType("smallint");

                    b.Property<int?>("ThirdPlaneInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("TopographyConcrementsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("Venous")
                        .HasColumnType("smallint");

                    b.Property<byte>("WashInArterialPhaseType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("ImageFileId");

                    b.HasIndex("LiverPageId");

                    b.ToTable("LiverFindings");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.LiverFindingPreset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("DifferentialDiagnosis")
                        .HasColumnType("integer");

                    b.Property<byte>("EarlyArterial")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FocalLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<int>("GrowthPatternsType")
                        .HasColumnType("integer");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsCalcification")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCentralScar")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFat")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemorrhageProducts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLateVenousPooling")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMaskingVenousPhase")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRightLobeOfLiver")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWashInArterialPhase")
                        .HasColumnType("boolean");

                    b.Property<byte>("LateArterial")
                        .HasColumnType("smallint");

                    b.Property<byte>("LiverSpecificContrastEnhancement")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("PortalVenous")
                        .HasColumnType("smallint");

                    b.Property<byte>("QualityOfEnhancement")
                        .HasColumnType("smallint");

                    b.Property<byte>("T1WSignalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2WSignalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("Venous")
                        .HasColumnType("smallint");

                    b.Property<byte>("WashInArterialPhaseType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("LiverFindingPresets");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.LiverPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AreFindings")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNoEvidenceOfStoneDisease")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("LiverPages");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.LymphNodeStationsFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("FindingType")
                        .HasColumnType("integer");

                    b.Property<bool>("IsAnterior")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCardioesophageal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCommonHepaticArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiaphragmaticLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiaphragmaticRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGastroduodenal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGastroepiploic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGastroesophageal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGreaterCurvature")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGreaterOmentum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHepatoduodenalLigament")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInferior")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInternalMammaryLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInternalMammaryRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLeftGastric")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLesserCurvature")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLesserOmentum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMiddle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPancreaticoduodenal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPancreaticolienal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeripancreatic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPyloric")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRetrocrural")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("LymphaticSystemFindingId")
                        .HasColumnType("uuid");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("LymphaticSystemFindingId");

                    b.ToTable("LymphNodeStationsFindings");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.LymphaticSystemFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("CMEnhancementQuantitativeType")
                        .HasColumnType("smallint");

                    b.Property<int>("DifferentialDiagnosisType")
                        .HasColumnType("integer");

                    b.Property<byte>("EvaluationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FormType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("ImageFileId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsAorticEncasement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalcification")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsContrastEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCysticTransformation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffusionRestriction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFattyHilum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFattyInfiltration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFattyTissueInTheLnHilus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIncreased")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLocation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLymphNodeBulk")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNumber")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPathologicDiffusionRestriction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPortalVeinEncasement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSandwichSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSize")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<byte>("LocalizationType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("LymphaticSystemPageId")
                        .HasColumnType("uuid");

                    b.Property<int?>("MaxShortAxisDiameterSad")
                        .HasColumnType("integer");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<string>("PictureNumber")
                        .HasColumnType("text");

                    b.Property<int?>("SecondPlaneInMm")
                        .HasColumnType("integer");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("text");

                    b.Property<int?>("SizeInMm")
                        .HasColumnType("integer");

                    b.Property<decimal>("SpineLocation")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int?>("ThirdPlaneInMm")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ImageFileId");

                    b.HasIndex("LymphaticSystemPageId");

                    b.ToTable("LymphaticSystemFindings");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.LymphaticSystemPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AreFindings")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("LymphaticSystemPages");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.PancreasFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("ASuperiorMesentericArteryCharacteristicsType")
                        .HasColumnType("smallint");

                    b.Property<byte?>("AbscessExpansion")
                        .HasColumnType("smallint");

                    b.Property<byte>("AcutePancreatitisDiagnosisType")
                        .HasColumnType("smallint");

                    b.Property<byte>("AcutePancreatitisExpansionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("AnatomicalVariantsAnomalyFindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("AssessmentType")
                        .HasColumnType("smallint");

                    b.Property<byte>("CeliacTrunkCharacteristicsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("CharacterizationIIIHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("CommonHepaticArteryCharacteristicsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementDistribution")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementQuantitative")
                        .HasColumnType("smallint");

                    b.Property<byte>("DescriptionType")
                        .HasColumnType("smallint");

                    b.Property<byte?>("Diameter")
                        .HasColumnType("smallint");

                    b.Property<int?>("DiameterLargestLesion")
                        .HasColumnType("integer");

                    b.Property<byte>("DiffuseParenchymalChangesHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DiffuseParenchymalDifferentialDiagnosis1")
                        .HasColumnType("smallint");

                    b.Property<byte>("DiffuseParenchymalDifferentialDiagnosis2")
                        .HasColumnType("smallint");

                    b.Property<byte?>("DilationUpstreamDuct")
                        .HasColumnType("smallint");

                    b.Property<byte?>("DuctHepatocholedochusDiameter")
                        .HasColumnType("smallint");

                    b.Property<byte?>("ExtrahepaticCholestasis")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FormType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FukuokaCriteriaType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FukuokaNegativeCystSizeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("GastroduodenalArteryCharacteristicsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("GrowthPatternsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HistologyKnownType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("ImageFileId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsASuperiorMesentericArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAbruptChangeInPancreatic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAbscess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAcuteNecroticFluidCollection")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAcuteOnChronic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAcutePeripancreaticFluidCollection")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdjacentEdematousIntestinalWallChange")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAnteriorPararenalSpace")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBleeding")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBranchduct")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBursaOmentalis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCAIsIncreased")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCTMRIIn6MonthsThen")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCTMRIIn6MonthsThereafter")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalcification")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCeliacTrunk")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCharacterizationIPancreaticCorpus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCharacterizationIPancreaticHead")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCharacterizationIPancreaticTail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCholecystitis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsClinicalPancreatitis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsColon")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCommonHepaticArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCommunicating")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConcretion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConnectionToTheDuctusPancreaticus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsContrastEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsContrastEnhancingMuralNodules")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCysts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDebris")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiameterCysticLesionOver3cm")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffuseSmallestFatNecroses")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffusionRestriction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDilatationOfThePancreaticDuct")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDilationUpstreamDuct")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiscussionEndosonography")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiscussionSurgicalIndication")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDoubleDuctSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDuodenalStenosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDuodenum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEndosonography")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnhancementOfTheCapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExtensionDuctHepatocholedochus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExtrahepaticCholestasis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExtrahepaticCholestasisAdjacent")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExtrapancreatic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFat")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFatTissueNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFillingDefects")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFistula")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFluidAccumulation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFollowUpInOneTwoYears")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGas")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGastroduodenalArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGrowthAboveFiveMmInTwoYears")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemorrhage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemosiderin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHighRiskContrastEnhancingmuralNodule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHistologyKnown")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInternalChangesFat")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntraductalGas")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntrapancreatic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIrregularConfiguration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIsolated")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLesionAboveOne")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLymphNodes")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMRIWithEndosonography")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMassEffect")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMesocolonTransversum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMultifocal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMultipleLesions")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsObstructionOfTheAbberantPancreaticDuct")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsObstructiveCholestasisWithCysticLesion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPancreaticBody")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPancreaticCorpus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPancreaticDuct")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPancreaticDuctFiveToNineMm")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPancreaticHead")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPancreaticTail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPancreaticoduodenalArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPapillaDuodeniMajor")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParenchymalAtrophy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParenchymalAtrophyPancreaticBody")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParenchymalAtrophyPancreaticHead")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParenchymalAtrophyPancreaticTail")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParenchymalAtrophyUncinateProcess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParenchymalFattyDegeneration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParenchymalNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParenchymatous")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPelvis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeripancreatic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeritonealCavity")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPortalVein")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPortalVeinCompleteOcclusion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPseudoaneurysm")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPseudoaneurysmGastroduodenalArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPseudoaneurysmPancreaticoduodenalArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPseudoaneurysmSplenicArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPseudocyst")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPseudocystEnhancementOfTheCapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPseudocystMultipleLesions")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPseudocysts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSepts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalVoids")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSpleen")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSplenicArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSplenicVein")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSplenicVeinCompleteOcclusion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStenosisOfTheMinorPapilla")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStomach")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStomachSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStringOfPearlsConfiguration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubordinate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTearDropSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsThickenedWall")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsThrombosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTruncusCoelicus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUncinateProcess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVCavaInferior")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVSuperiorMesentericArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVesselInvolvement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWalledOffNecrosis")
                        .HasColumnType("boolean");

                    b.Property<byte>("MainMassDifferentialDiagnosisType1")
                        .HasColumnType("smallint");

                    b.Property<byte>("MarginType")
                        .HasColumnType("smallint");

                    b.Property<byte>("MassDifferentialDiagnosisType1")
                        .HasColumnType("smallint");

                    b.Property<byte>("MassDifferentialDiagnosisType2")
                        .HasColumnType("smallint");

                    b.Property<byte>("MassDifferentialDiagnosisType3")
                        .HasColumnType("smallint");

                    b.Property<byte?>("MaxDiameter")
                        .HasColumnType("smallint");

                    b.Property<byte?>("MeasurementDilatation")
                        .HasColumnType("smallint");

                    b.Property<byte?>("MonthOfOperation")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("PancreasAnulareClassificationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("PancreasDivisumClassificationType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("PancreasPageId")
                        .HasColumnType("uuid");

                    b.Property<byte?>("PancreaticDuctDilatation")
                        .HasColumnType("smallint");

                    b.Property<byte>("PancreaticDuctPathologyType")
                        .HasColumnType("smallint");

                    b.Property<byte>("PancreaticoduodenalArteryCharacteristicsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("PathologyType")
                        .HasColumnType("smallint");

                    b.Property<byte>("PhaseType")
                        .HasColumnType("smallint");

                    b.Property<string>("PictureNumber")
                        .HasColumnType("text");

                    b.Property<byte>("PortalVeinCharacteristicsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("PostoperativeFindingType")
                        .HasColumnType("smallint");

                    b.Property<int?>("PseudocystDiameterLargestLesion")
                        .HasColumnType("integer");

                    b.Property<int?>("SecondPlane")
                        .HasColumnType("integer");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("text");

                    b.Property<byte>("SignalT1wFSType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalT1wType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalT2wType")
                        .HasColumnType("smallint");

                    b.Property<int?>("Size")
                        .HasColumnType("integer");

                    b.Property<byte>("SplenicArteryCharacteristicsType")
                        .HasColumnType("smallint");

                    b.Property<int?>("ThirdPlane")
                        .HasColumnType("integer");

                    b.Property<byte>("VCavaInferiorCharacteristicsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("VSuperiorMesentericArteryCharacteristicsType")
                        .HasColumnType("smallint");

                    b.Property<int?>("YearOfOperation")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ImageFileId");

                    b.HasIndex("PancreasPageId");

                    b.ToTable("PancreasFindings");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.PancreasFindingPreset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("ContrastEnhancementDistribution")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementQuantitative")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FormType")
                        .HasColumnType("smallint");

                    b.Property<byte>("GrowthPatternsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsCalcification")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemorrhage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemosiderin")
                        .HasColumnType("boolean");

                    b.Property<byte>("MainMassDifferentialDiagnosisType1")
                        .HasColumnType("smallint");

                    b.Property<byte>("MarginType")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("PancreaticDuctPathologyType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalT1wType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalT2wType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("PancreasFindingPresets");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.PancreasPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AreFindings")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("PancreasPages");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.PeritonealCavityFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AscitesQualityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementDistributionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementQuantitativeType")
                        .HasColumnType("smallint");

                    b.Property<int>("DifferentialDiagnosis1Type")
                        .HasColumnType("integer");

                    b.Property<int>("DifferentialDiagnosis2Type")
                        .HasColumnType("integer");

                    b.Property<int>("DifferentialDiagnosis3Type")
                        .HasColumnType("integer");

                    b.Property<int>("DifferentialDiagnosisType")
                        .HasColumnType("integer");

                    b.Property<int?>("ExtensionSizeInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FormType")
                        .HasColumnType("smallint");

                    b.Property<byte>("GrowthPatternsType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("ImageFileId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsAbdominalWall")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAboveOneLesionOfTheSameEntity")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAnteriorLeafGerotaFascia")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAnteriorPararenalSpace")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsArteries")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAscites")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAssociatedFindingsCapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBone")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBoneOrTooth")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalcification")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsColon")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCommunicatingLesions")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConcomitantPeritonitis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsContrastEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCutaneous")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCysts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDDPostoperative")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffuse")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffusionRestriction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEncasementOfMesentericVessels")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEvidenceOfContrastMediaLatePhase")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFat")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFluidLevel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFocalGasInclusion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFreeGas")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemorrhage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIleus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsImpressionOfLiverSurface")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsImpressionOfSpleenSurface")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInframesenteric")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInframesocolic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInteraortocaval")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInternalChangesCapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntraperitoneal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInvolvedQuadrantsLeftLower")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInvolvedQuadrantsLeftUpper")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInvolvedQuadrantsRightLower")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInvolvedQuadrantsRightUpper")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLateroconalFascia")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMPsoas")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMesentericFatInvolvement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMesentericRoot")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMesenteryOfTheSmallBowel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMesocolonTransversum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNeuralForamen")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOmentalBursa")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOmentalForamen")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOmentumInvolvement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOmentumMajus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParaaortic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParacaval")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParacolic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParacolicLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParacolicRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerforation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerirenalSpace")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeritonealContrastEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPosteriorLeafGerotaFascia")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPosteriorPararenalSpace")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPseudoCapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectoUterinePouchPouchOfDouglas")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectoVesicalPouch")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRetractionOfAdjacentIntestinalLoops")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRetroperitoneum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRetroperitoneumLeftSide")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRetroperitoneumRightSide")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSedimentationEffects")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSepta")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalDrop")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalVoids")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignsOfSuperinfection")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSmallIntestine")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSpaceOccupying")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSpinalCanal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSpondylodiscitis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSpondylodiscitisSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStomach")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubhepatic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubordinate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubphrenic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSupramesenteric")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSupramesocolic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspectedAbscess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspectedAbscessAboveOneFinding")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsThickenedGreaterOmentum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUreter")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVeins")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVesicoUterinePouch")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsZuckerkandlsFascia")
                        .HasColumnType("boolean");

                    b.Property<byte>("MarginType")
                        .HasColumnType("smallint");

                    b.Property<int?>("MaxThicknessInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("PMLocalizationHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("PMStrongHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("PeritonealCavityPageId")
                        .HasColumnType("uuid");

                    b.Property<string>("PictureNumber")
                        .HasColumnType("text");

                    b.Property<byte>("QuantityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("RMLocalizationHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("RMStrongHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<int?>("SecondPlaneInMm")
                        .HasColumnType("integer");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("text");

                    b.Property<byte>("SignalDropExtensionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("T1wSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2wSignal")
                        .HasColumnType("smallint");

                    b.Property<int?>("ThickenedGreaterOmentumMaxWidthInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("ThirdPlaneInMm")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ImageFileId");

                    b.HasIndex("PeritonealCavityPageId");

                    b.ToTable("PeritonealCavityFindings");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.PeritonealCavityPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AreFindings")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("PeritonealCavityPages");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.Sequence", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Is3D")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsADCMap")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsB0")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsB100")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsB1000")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsB50")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsB800")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsChemicalShiftImaging")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCineImaging")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMrcp")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParallelImaging")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPostContrast")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSaturatedFat")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubtraction")
                        .HasColumnType("boolean");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("OrientationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SequenceType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("TechnologyPageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("WeightingType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("TechnologyPageId");

                    b.ToTable("Sequences");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.SpleenFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("CMEnhancementDistributionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("CMEnhancementHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("CMEnhancementQuantitativeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DelimitationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DescriptionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis1")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis2")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis3")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FormType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HistologyKnownType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("ImageFileId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsAtTheHilus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBleeding")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalcium")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCleaves")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffusionRestriction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExtremePosterior")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExtremitasAnterior")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFat")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFlowVoid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHistologyKnown")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLiquid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLobulation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMass")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMiddleThird")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMoreThanOneLesionParenchymatous")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMoreThanOneLesionSamePathology")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMoreThanOneLesionSubcapsular")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMultifocalLocalization")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNoDisplacement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNodes")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNotches")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOcclusionOfTheSplenicVein")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParenchymatous")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSepts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubcapsular")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubordinate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsThrombosisOfTheSplenicVein")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUpstreamAneurysm")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUpstreamArterialOcclusion")
                        .HasColumnType("boolean");

                    b.Property<byte?>("MaxDiameterInMm")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<string>("PictureNumber")
                        .HasColumnType("text");

                    b.Property<byte>("PlantVariationPathologicalAnatomyType")
                        .HasColumnType("smallint");

                    b.Property<byte>("QuantityType")
                        .HasColumnType("smallint");

                    b.Property<int?>("SecondPlaneInMm")
                        .HasColumnType("integer");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("text");

                    b.Property<int?>("SizeInMm")
                        .HasColumnType("integer");

                    b.Property<Guid?>("SpleenPageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("T1w")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2w")
                        .HasColumnType("smallint");

                    b.Property<int?>("ThirdPlaneInMm")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ImageFileId");

                    b.HasIndex("SpleenPageId");

                    b.ToTable("SpleenFindings");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.SpleenFindingPreset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("CMEnhancementDistributionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("CMEnhancementHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("CMEnhancementQuantitativeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DelimitationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FormType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("T1w")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2w")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("SpleenFindingPresets");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.SpleenPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AreFindings")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("SpleenPages");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.SummaryPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("CourseType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FurtherParametersDetailsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FurtherParametersLymphaticInvasionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FurtherParametersPerineuralInvasionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FurtherParametersRResidualType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FurtherParametersVenousInvasionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("GradingType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsADR")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsArterialPhase")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBRA")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBiopsy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCTGuided")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsClinicalCorrelation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsColonoscopy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsContrastEnhancedMri")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsContrastEnhancedUltrasoundExaminationCeus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorrelationWithLaboratoryFindings")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCt")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDrainage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsERCP")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEndocrinology")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFollowUp")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGastroscopy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGynecology")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHEP")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHepatocyteSpecificContrastAgent")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInterdisciplinaryDiscussionInTumourBoard")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInternalMedicine")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLYM")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMAR")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMRCP")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMriGuided")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNonEnhanced")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOSS")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOTH")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPER")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPLE")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPTCD")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPUL")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPercutaneous")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPortalVenousPhase")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsQuantity")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRecommendedConsultation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSKI")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSize")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSonographicallyGuided")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSurgery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTransesophageal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTransgastric")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTranshepatic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTransrectal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTransvaginal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUltrasoundExamination")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUrographicPhase")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUrology")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWithIVContrastAgent")
                        .HasColumnType("boolean");

                    b.Property<byte>("LiRADSCategoryType")
                        .HasColumnType("smallint");

                    b.Property<byte>("LiRADSTreatmentResponseCategoryType")
                        .HasColumnType("smallint");

                    b.Property<byte>("MStageSubType")
                        .HasColumnType("smallint");

                    b.Property<byte>("MStageType")
                        .HasColumnType("smallint");

                    b.Property<byte>("NStageSentinelNodeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("NStageSubType")
                        .HasColumnType("smallint");

                    b.Property<byte>("NStageType")
                        .HasColumnType("smallint");

                    b.Property<int>("PeriodType")
                        .HasColumnType("integer");

                    b.Property<byte>("RemissionDetailsType")
                        .HasColumnType("smallint");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<byte>("TStageSubType")
                        .HasColumnType("smallint");

                    b.Property<byte>("TStageType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("SummaryPages");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.TechnologyPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BarcodeCMCharge")
                        .HasColumnType("text");

                    b.Property<byte>("CMReinforcedType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastMediumType")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("ContrastQuantity")
                        .HasColumnType("numeric");

                    b.Property<byte>("ImageQualityType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCMSideEffect")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsChemicalShift")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCortisoneIV")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnteroclysis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsH1BlockerIV")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsH2BlockerIV")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIncorrectSubtraction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMaskingOrLiquidMatrix")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMetalArtifacts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMotion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNotFurtherSpecified")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsO2Administration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOralContrast")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOther")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPulsationOrBreathing")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectalContrast")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubcutaneousEpinephrine")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSusceptibilityArtifacts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUrinaryBladderContrast")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVaginalContrast")
                        .HasColumnType("boolean");

                    b.Property<byte>("MagneticFieldStrengthType")
                        .HasColumnType("smallint");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<byte>("SequencesType")
                        .HasColumnType("smallint");

                    b.Property<string>("SetName")
                        .HasColumnType("text");

                    b.Property<byte>("SpasmolysisType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("TechnologyPages");
                });

            modelBuilder.Entity("RadioReport.Common.Logic.Models.PageInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("boolean");

                    b.Property<Guid>("PageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("PageNumber")
                        .HasColumnType("smallint");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<string>("TypeName")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("WasModified")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("PageInfos");
                });

            modelBuilder.Entity("RadioReport.Common.Logic.Models.ReportModels.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccessionNumber")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Evaluation")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ExaminationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ExaminationType")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("FindingsDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FreeField")
                        .HasColumnType("text");

                    b.Property<Guid>("InstituteId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("boolean");

                    b.Property<string>("Language")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<Guid>("LicenseFractionId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("LicensingDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<byte>("PatientAge")
                        .HasColumnType("smallint");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uuid");

                    b.Property<string>("PresetCode")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<byte>("Status")
                        .HasColumnType("smallint");

                    b.Property<string>("StudyInstanceUID")
                        .HasColumnType("text");

                    b.Property<byte>("TotalPageCount")
                        .HasColumnType("smallint");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("RadioReport.Common.Logic.Models.ReportModels.ReportResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Approved")
                        .HasColumnType("text");

                    b.Property<string>("Discussion")
                        .HasColumnType("text");

                    b.Property<Guid>("InstituteId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsICD10")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLocalizer")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsReferenceImage")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<string>("ReportSummary")
                        .HasColumnType("text");

                    b.Property<string>("ReportTypeName")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("ReportResults");
                });

            modelBuilder.Entity("RadioReport.Common.Logic.Models.ReportModels.ReportSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("InstituteId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("ReportSession");
                });

            modelBuilder.Entity("RadioReport.Common.Module.Logic.Models.Pages.ImageFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<string>("ObjectName")
                        .HasColumnType("text");

                    b.Property<byte[]>("Stream")
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("ImageFile");
                });

            modelBuilder.Entity("RadioReport.Common.Module.Logic.Models.Pages.PatientInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<byte?>("Age")
                        .HasColumnType("smallint");

                    b.Property<byte>("Gender")
                        .HasColumnType("smallint");

                    b.Property<int>("Height")
                        .HasColumnType("integer");

                    b.Property<int>("Weight")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("PatientInformation");
                });

            modelBuilder.Entity("RadioReport.Common.Module.Logic.Models.ReportGenerator.FindingLocalizer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Mapping")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("FindingLocalizers");
                });

            modelBuilder.Entity("RadioReport.Common.Module.Logic.Models.ReportGenerator.ReportSchema", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("BuildVersion")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<string>("Paragraphs")
                        .HasColumnType("text");

                    b.Property<string>("ReportTypeName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("VersionName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ReportTypeName", "VersionName")
                        .IsUnique();

                    b.ToTable("ReportSchemas");
                });

            modelBuilder.Entity("RadioReport.Common.Module.Logic.Models.ReportGenerator.ReportSchemaSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("LastActivity")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ReportSchemaId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ReportSchemaId")
                        .IsUnique();

                    b.ToTable("ReportSchemaSessions");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.AdrenalGlandsFinding", b =>
                {
                    b.HasOne("RadioReport.AbdomenMRT.Domain.Models.AdrenalGlandsPage", null)
                        .WithMany("Findings")
                        .HasForeignKey("AdrenalGlandsPageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RadioReport.Common.Module.Logic.Models.Pages.ImageFile", "UploadedImageFile")
                        .WithMany()
                        .HasForeignKey("ImageFileId");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.AdrenalGlandsPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.AnamnesisClinic", b =>
                {
                    b.HasOne("RadioReport.AbdomenMRT.Domain.Models.AnamnesisPage", null)
                        .WithMany("Clinics")
                        .HasForeignKey("AnamnesisPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.AnamnesisIndication", b =>
                {
                    b.HasOne("RadioReport.AbdomenMRT.Domain.Models.AnamnesisPage", null)
                        .WithMany("Indications")
                        .HasForeignKey("AnamnesisPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.AnamnesisPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.CMSideEffect", b =>
                {
                    b.HasOne("RadioReport.AbdomenMRT.Domain.Models.TechnologyPage", null)
                        .WithMany("CMSideEffects")
                        .HasForeignKey("TechnologyPageId");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.ExaminationRegionPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.GastrointestinalTractFinding", b =>
                {
                    b.HasOne("RadioReport.AbdomenMRT.Domain.Models.GastrointestinalTractPage", null)
                        .WithMany("Findings")
                        .HasForeignKey("GastrointestinalTractPageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RadioReport.Common.Module.Logic.Models.Pages.ImageFile", "UploadedImageFile")
                        .WithMany()
                        .HasForeignKey("ImageFileId");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.GastrointestinalTractPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.KidneysFinding", b =>
                {
                    b.HasOne("RadioReport.Common.Module.Logic.Models.Pages.ImageFile", "DecreasedRenalVolumeImageFile")
                        .WithMany()
                        .HasForeignKey("DecreasedRenalVolumeImageFileId");

                    b.HasOne("RadioReport.Common.Module.Logic.Models.Pages.ImageFile", "IncreasedRenalVolumeImageFile")
                        .WithMany()
                        .HasForeignKey("IncreasedRenalVolumeImageFileId");

                    b.HasOne("RadioReport.AbdomenMRT.Domain.Models.KidneysPage", null)
                        .WithMany("Findings")
                        .HasForeignKey("KidneysPageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RadioReport.Common.Module.Logic.Models.Pages.ImageFile", "MassImageFile")
                        .WithMany()
                        .HasForeignKey("MassImageFileId");

                    b.HasOne("RadioReport.Common.Module.Logic.Models.Pages.ImageFile", "NormVariantOrAnomalyImageFile")
                        .WithMany()
                        .HasForeignKey("NormVariantOrAnomalyImageFileId");

                    b.HasOne("RadioReport.Common.Module.Logic.Models.Pages.ImageFile", "ObstructiveNephropathyChar1ImageFile")
                        .WithMany()
                        .HasForeignKey("ObstructiveNephropathyChar1ImageFileId");

                    b.HasOne("RadioReport.Common.Module.Logic.Models.Pages.ImageFile", "ObstructiveNephropathyChar2ImageFile")
                        .WithMany()
                        .HasForeignKey("ObstructiveNephropathyChar2ImageFileId");

                    b.HasOne("RadioReport.Common.Module.Logic.Models.Pages.ImageFile", "VascularNephropathyImageFile")
                        .WithMany()
                        .HasForeignKey("VascularNephropathyImageFileId");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.KidneysPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.LiverFinding", b =>
                {
                    b.HasOne("RadioReport.Common.Module.Logic.Models.Pages.ImageFile", "UploadedImageFile")
                        .WithMany()
                        .HasForeignKey("ImageFileId");

                    b.HasOne("RadioReport.AbdomenMRT.Domain.Models.LiverPage", null)
                        .WithMany("Findings")
                        .HasForeignKey("LiverPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.LiverPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.LymphNodeStationsFinding", b =>
                {
                    b.HasOne("RadioReport.AbdomenMRT.Domain.Models.LymphaticSystemFinding", null)
                        .WithMany("LymphNodeStations")
                        .HasForeignKey("LymphaticSystemFindingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.LymphaticSystemFinding", b =>
                {
                    b.HasOne("RadioReport.Common.Module.Logic.Models.Pages.ImageFile", "UploadedImageFile")
                        .WithMany()
                        .HasForeignKey("ImageFileId");

                    b.HasOne("RadioReport.AbdomenMRT.Domain.Models.LymphaticSystemPage", null)
                        .WithMany("Findings")
                        .HasForeignKey("LymphaticSystemPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.LymphaticSystemPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.PancreasFinding", b =>
                {
                    b.HasOne("RadioReport.Common.Module.Logic.Models.Pages.ImageFile", "UploadedImageFile")
                        .WithMany()
                        .HasForeignKey("ImageFileId");

                    b.HasOne("RadioReport.AbdomenMRT.Domain.Models.PancreasPage", null)
                        .WithMany("Findings")
                        .HasForeignKey("PancreasPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.PancreasPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.PeritonealCavityFinding", b =>
                {
                    b.HasOne("RadioReport.Common.Module.Logic.Models.Pages.ImageFile", "UploadedImageFile")
                        .WithMany()
                        .HasForeignKey("ImageFileId");

                    b.HasOne("RadioReport.AbdomenMRT.Domain.Models.PeritonealCavityPage", null)
                        .WithMany("Findings")
                        .HasForeignKey("PeritonealCavityPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.PeritonealCavityPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.Sequence", b =>
                {
                    b.HasOne("RadioReport.AbdomenMRT.Domain.Models.TechnologyPage", null)
                        .WithMany("Sequences")
                        .HasForeignKey("TechnologyPageId");
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.SpleenFinding", b =>
                {
                    b.HasOne("RadioReport.Common.Module.Logic.Models.Pages.ImageFile", "UploadedImageFile")
                        .WithMany()
                        .HasForeignKey("ImageFileId");

                    b.HasOne("RadioReport.AbdomenMRT.Domain.Models.SpleenPage", null)
                        .WithMany("Findings")
                        .HasForeignKey("SpleenPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.SpleenPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.SummaryPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.AbdomenMRT.Domain.Models.TechnologyPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.Common.Logic.Models.PageInfo", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany("Pages")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.Common.Logic.Models.ReportModels.ReportResult", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany("ReportResults")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.Common.Module.Logic.Models.Pages.PatientInformation", b =>
                {
                    b.HasOne("RadioReport.AbdomenMRT.Domain.Models.ExaminationRegionPage", null)
                        .WithOne("PatientInformation")
                        .HasForeignKey("RadioReport.Common.Module.Logic.Models.Pages.PatientInformation", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.Common.Module.Logic.Models.ReportGenerator.ReportSchemaSession", b =>
                {
                    b.HasOne("RadioReport.Common.Module.Logic.Models.ReportGenerator.ReportSchema", null)
                        .WithOne("Session")
                        .HasForeignKey("RadioReport.Common.Module.Logic.Models.ReportGenerator.ReportSchemaSession", "ReportSchemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
