// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RadioReport.Core.CenterSpecificSettings.Repo;

namespace RadioReport.Core.CenterSpecificSettings.Repo.Migrations
{
    [DbContext(typeof(CenterSpecificSettingsDbContext))]
    partial class CenterSpecificSettingsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("RadioReport.Core.CenterSpecificSettings.Domain.Models.Acquisition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AcquisitionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("BreathingProtocolType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("CSPSetId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsArterial")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsArterialEarly")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsArterialLate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCTMyelography")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsECGGating")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNative")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerfusionCT")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPulmonaryArterialPhase")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVenous")
                        .HasColumnType("boolean");

                    b.Property<float?>("LateDelayInMin")
                        .HasColumnType("real");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<int?>("NumberOfLines")
                        .HasColumnType("integer");

                    b.Property<byte>("PatientPositioningType")
                        .HasColumnType("smallint");

                    b.Property<int?>("ReferenceValueInMAs")
                        .HasColumnType("integer");

                    b.Property<float?>("SliceThicknessInMm")
                        .HasColumnType("real");

                    b.Property<byte>("TechniqueType")
                        .HasColumnType("smallint");

                    b.Property<int?>("TubeCurrent1MAs")
                        .HasColumnType("integer");

                    b.Property<int?>("TubeCurrent2MAs")
                        .HasColumnType("integer");

                    b.Property<byte>("TubeCurrentModulationType")
                        .HasColumnType("smallint");

                    b.Property<int?>("TubeVoltage1KV")
                        .HasColumnType("integer");

                    b.Property<int?>("TubeVoltage2KV")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CSPSetId");

                    b.ToTable("Acquisitions");
                });

            modelBuilder.Entity("RadioReport.Core.CenterSpecificSettings.Domain.Models.CSPFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("FindingType")
                        .IsUnique();

                    b.ToTable("CSPFindings");
                });

            modelBuilder.Entity("RadioReport.Core.CenterSpecificSettings.Domain.Models.CSPSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CSPFindingId")
                        .HasColumnType("uuid");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<string>("SetName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CSPFindingId");

                    b.ToTable("CSPSets");
                });

            modelBuilder.Entity("RadioReport.Core.CenterSpecificSettings.Domain.Models.Reconstruction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AcquisitionId")
                        .HasColumnType("uuid");

                    b.Property<int?>("DoseLengthProductMGycm")
                        .HasColumnType("integer");

                    b.Property<bool>("IsBone")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCTAngiography")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLungs")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMIP")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMPR")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMinIP")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSoftTissues")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVRT")
                        .HasColumnType("boolean");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("ReconstructionType")
                        .HasColumnType("smallint");

                    b.Property<float?>("SliceThicknessST1Mm")
                        .HasColumnType("real");

                    b.Property<float?>("SliceThicknessST2Mm")
                        .HasColumnType("real");

                    b.Property<float?>("SliceThicknessST3Mm")
                        .HasColumnType("real");

                    b.Property<float?>("SliceThicknessST4Mm")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AcquisitionId");

                    b.ToTable("Reconstructions");
                });

            modelBuilder.Entity("RadioReport.Core.CenterSpecificSettings.Domain.Models.Sequence", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CSPSetId")
                        .HasColumnType("uuid");

                    b.Property<byte>("ContrastEnhancedMRAngiographyType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ExaminationTechniqueType")
                        .HasColumnType("smallint");

                    b.Property<bool>("Is3D")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsADCMap")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsB0")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsB100")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsB1000")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsB1400")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsB50")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsB800")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBreathHoldingTechnique")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalculated")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsChemicalShiftImaging")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCineImaging")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCompressedSense")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDefaecography")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDynamicsAfterContrastInjection")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDynamicsFollowingGdApplication")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsECGTriggering")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEpiDwi")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHasteNonEpiDwi")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHighResolution")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLateStage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMIP")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMPR")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMrcp")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParallelImaging")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPostContrast")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPostContrastPerfusion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPostContrastSubtraction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRespiratoryTriggering")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSaturatedFat")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSedation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubtraction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVRT")
                        .HasColumnType("boolean");

                    b.Property<byte>("MethodType")
                        .HasColumnType("smallint");

                    b.Property<byte>("NonContrastEnhancedMRAngiographyType")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("OrientationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("OtherApplicationsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SequenceType")
                        .HasColumnType("smallint");

                    b.Property<bool>("SiliconeSensitive")
                        .HasColumnType("boolean");

                    b.Property<bool>("SiliconeSuppressing")
                        .HasColumnType("boolean");

                    b.Property<byte>("WeightingType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("CSPSetId");

                    b.ToTable("CSPSequences");
                });

            modelBuilder.Entity("RadioReport.Core.CenterSpecificSettings.Domain.Models.Acquisition", b =>
                {
                    b.HasOne("RadioReport.Core.CenterSpecificSettings.Domain.Models.CSPSet", null)
                        .WithMany("Acquisitions")
                        .HasForeignKey("CSPSetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.Core.CenterSpecificSettings.Domain.Models.CSPSet", b =>
                {
                    b.HasOne("RadioReport.Core.CenterSpecificSettings.Domain.Models.CSPFinding", null)
                        .WithMany("Sets")
                        .HasForeignKey("CSPFindingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.Core.CenterSpecificSettings.Domain.Models.Reconstruction", b =>
                {
                    b.HasOne("RadioReport.Core.CenterSpecificSettings.Domain.Models.Acquisition", null)
                        .WithMany("Reconstructions")
                        .HasForeignKey("AcquisitionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.Core.CenterSpecificSettings.Domain.Models.Sequence", b =>
                {
                    b.HasOne("RadioReport.Core.CenterSpecificSettings.Domain.Models.CSPSet", null)
                        .WithMany("Sequences")
                        .HasForeignKey("CSPSetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
