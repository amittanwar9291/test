// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RadioReport.HeadMRT.Repo;

namespace RadioReport.HeadMRT.Repo.Migrations
{
    [DbContext(typeof(HeadMRTDbContext))]
    [Migration("20210826055550_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("RadioReport.Common.Logic.Models.PageInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("boolean");

                    b.Property<Guid>("PageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("PageNumber")
                        .HasColumnType("smallint");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<string>("TypeName")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("WasModified")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("PageInfos");
                });

            modelBuilder.Entity("RadioReport.Common.Logic.Models.ReportModels.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccessionNumber")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Evaluation")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ExaminationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ExaminationType")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("FindingsDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FreeField")
                        .HasColumnType("text");

                    b.Property<Guid>("InstituteId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("boolean");

                    b.Property<string>("Language")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<Guid>("LicenseFractionId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("LicensingDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<byte>("PatientAge")
                        .HasColumnType("smallint");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uuid");

                    b.Property<string>("PresetCode")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<byte>("Status")
                        .HasColumnType("smallint");

                    b.Property<string>("StudyInstanceUID")
                        .HasColumnType("text");

                    b.Property<byte>("TotalPageCount")
                        .HasColumnType("smallint");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("RadioReport.Common.Logic.Models.ReportModels.ReportResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Approved")
                        .HasColumnType("text");

                    b.Property<string>("Discussion")
                        .HasColumnType("text");

                    b.Property<Guid>("InstituteId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsICD10")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLocalizer")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsReferenceImage")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<string>("ReportSummary")
                        .HasColumnType("text");

                    b.Property<string>("ReportTypeName")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("ReportResults");
                });

            modelBuilder.Entity("RadioReport.Common.Logic.Models.ReportModels.ReportSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("InstituteId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("ReportSession");
                });

            modelBuilder.Entity("RadioReport.Common.Module.Logic.Models.Pages.ImageFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<string>("ObjectName")
                        .HasColumnType("text");

                    b.Property<byte[]>("Stream")
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("ImageFile");
                });

            modelBuilder.Entity("RadioReport.Common.Module.Logic.Models.Pages.PatientInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<byte?>("Age")
                        .HasColumnType("smallint");

                    b.Property<byte>("Gender")
                        .HasColumnType("smallint");

                    b.Property<int>("Height")
                        .HasColumnType("integer");

                    b.Property<int>("Weight")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("PatientInformation");
                });

            modelBuilder.Entity("RadioReport.Common.Module.Logic.Models.ReportGenerator.FindingLocalizer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Mapping")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("FindingLocalizers");
                });

            modelBuilder.Entity("RadioReport.Common.Module.Logic.Models.ReportGenerator.ReportSchema", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("BuildVersion")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<string>("Paragraphs")
                        .HasColumnType("text");

                    b.Property<string>("ReportTypeName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("VersionName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ReportTypeName", "VersionName")
                        .IsUnique();

                    b.ToTable("ReportSchemas");
                });

            modelBuilder.Entity("RadioReport.Common.Module.Logic.Models.ReportGenerator.ReportSchemaSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("LastActivity")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ReportSchemaId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ReportSchemaId")
                        .IsUnique();

                    b.ToTable("ReportSchemaSessions");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.AnamnesisPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCT")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDSA")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMRI")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPETCT")
                        .HasColumnType("boolean");

                    b.Property<byte>("MonthOfCT")
                        .HasColumnType("smallint");

                    b.Property<byte>("MonthOfDSA")
                        .HasColumnType("smallint");

                    b.Property<byte>("MonthOfMRI")
                        .HasColumnType("smallint");

                    b.Property<byte>("MonthOfPETCT")
                        .HasColumnType("smallint");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<int>("YearOfCT")
                        .HasColumnType("integer");

                    b.Property<int>("YearOfDSA")
                        .HasColumnType("integer");

                    b.Property<int>("YearOfMRI")
                        .HasColumnType("integer");

                    b.Property<int>("YearOfPETCT")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("AnamnesisPages");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.BasalNucleiFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AdcSignalType")
                        .HasColumnType("smallint");

                    b.Property<decimal>("BasalGangliaLocations")
                        .HasColumnType("numeric(20,0)");

                    b.Property<Guid?>("BasalNucleiPageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("ContrastDistributionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DescriptionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosisLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosisType1")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosisType2")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosisType3")
                        .HasColumnType("smallint");

                    b.Property<byte>("DominantFindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DwiSignalType")
                        .HasColumnType("smallint");

                    b.Property<int?>("ExtentOfMidlineShift")
                        .HasColumnType("integer");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FlairSignalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<bool>("Is1LesionOfTheSamePathology")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAbscess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalcification")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConfluent")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCysts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffusionRestriction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFat")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFluidFluidLevel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemorrhage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHistologyKnown")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfiltration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInvolvementOfVentricles")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLateralVentricleLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLateralVentricleRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMassEffect")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMidlineShift")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParenchymalDefect")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerifocalEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSepta")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalVoid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalVoids")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubordinate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsThirdVentricle")
                        .HasColumnType("boolean");

                    b.Property<byte>("KnownHistologyType")
                        .HasColumnType("smallint");

                    b.Property<byte>("MarginType")
                        .HasColumnType("smallint");

                    b.Property<int?>("MaximumDiameter")
                        .HasColumnType("integer");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("ShapeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SideType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalVoidType")
                        .HasColumnType("smallint");

                    b.Property<int?>("Size")
                        .HasColumnType("integer");

                    b.Property<int?>("Size2ndPlane")
                        .HasColumnType("integer");

                    b.Property<int?>("Size3rdPlane")
                        .HasColumnType("integer");

                    b.Property<byte>("T1wSignalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2wSignalType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BasalNucleiPageId");

                    b.ToTable("BasalNucleiFindings");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.BasalNucleiFindingPreset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AdcSignalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosisLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DwiSignalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FlairSignalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsDiffusionRestriction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalVoid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalVoids")
                        .HasColumnType("boolean");

                    b.Property<byte>("MarginType")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalVoidType")
                        .HasColumnType("smallint");

                    b.Property<byte>("T1wSignalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2wSignalType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("BasalNucleiFindingPresets");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.BasalNucleiPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AreFindings")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("BasalNucleiPages");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.BrainstemCranialNervesFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AdcSignalType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("BrainstemCranialNervesPageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("ContrastEnhancementDistributionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementQuantitativeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("CranialNerveType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DescriptionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis1")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis2")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis3")
                        .HasColumnType("smallint");

                    b.Property<byte>("DwiSignalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FlairSignalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HistologyKnownType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsBrainstemAtrophy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalcification")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCanalisHypoglossi")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCochlearNerve")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConfluent")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCrusCerebri")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCrusCerebriLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCrusCerebriRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCysts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffusionRestriction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFacialisCanal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFat")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFluidLevel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsForamenStylomastoid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFossulaPetrosa")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGanglionInferius")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGeniculumOfTheFacialNerve")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemorrhage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHistologyKnown")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHydrocephalus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfiltration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLaminaTecti")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMassEffect")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMeatusAcusticusInternus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMedullaOblongata")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMedullaOblongataAnterior")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMedullaOblongataCentral")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMedullaOblongataPosterior")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMesencephalon")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMidbrainAtrophy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMoreThan1Lesion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNerveCompression")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNerveThickening")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNucleusRuber")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerifocalEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerineuralTumorSpread")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPons")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPonsCentral")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPonsLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPonsPeripheral")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPonsRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRootEntryZone")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSepta")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalVoid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalVoids")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubordinate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubstanceDefect")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubstantiaNigra")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSulcusLateralisPosterior")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuperciliaryGanglion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTegmentumMesencephali")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTrigonumNerviVagi")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVestibularNerve")
                        .HasColumnType("boolean");

                    b.Property<byte>("MarginType")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<int?>("SecondPlane")
                        .HasColumnType("integer");

                    b.Property<byte>("ShapeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SideType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalVoidType")
                        .HasColumnType("smallint");

                    b.Property<int?>("Size")
                        .HasColumnType("integer");

                    b.Property<byte>("T1WSignalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2WSignalType")
                        .HasColumnType("smallint");

                    b.Property<int?>("ThirdPlane")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BrainstemCranialNervesPageId");

                    b.ToTable("BrainstemCranialNervesFindings");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.BrainstemCranialNervesFindingPreset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("ContrastEnhancementDistributionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementQuantitativeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis")
                        .HasColumnType("smallint");

                    b.Property<byte>("DwiSignalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FlairSignalType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsCysts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPons")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalVoid")
                        .HasColumnType("boolean");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalVoidType")
                        .HasColumnType("smallint");

                    b.Property<byte>("T1WSignalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2WSignalType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("BrainstemCranialNervesFindingPresets");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.BrainstemCranialNervesPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AreFindings")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInTheHighResolutionSequences")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("BrainstemCranialNervesPages");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.CMSideEffect", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("CMSideEffectType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DurationAdverseReactionType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsCompletelyDeclining")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSeriousAdverseEvent")
                        .HasColumnType("boolean");

                    b.Property<int?>("MinAfterCMinjection")
                        .HasColumnType("integer");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("TechnologyPageId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TechnologyPageId");

                    b.ToTable("CMSideEffects");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.CerebrospinalFluidSpaceFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AsymmetryType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("CerebrospinalFluidSpacePageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("ConfigurationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementDistributionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementQuantitativeType")
                        .HasColumnType("smallint");

                    b.Property<int?>("CorpusCallosumAngle")
                        .HasColumnType("integer");

                    b.Property<byte>("DescriptionType")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("EvansIndex")
                        .HasColumnType("numeric");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FlairSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("HistologyKnownType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<bool>("Is1LesionOfTheSameEntity")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdjacentToTheTentorium")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAnteriorHornLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAnteriorHornRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAquaeductusMesencephaliSylvii")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAtrophyOfBrainParenchyma")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBilateralHygromas")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalcification")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalcified")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCellaMediaLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCellaMediaRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCerebrospinalFluidNegativePressure")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCisternaMagna")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCompressionBothSinuses")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCysts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffusionRestriction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDisplacement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnlargementOfIIIVentricle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEpiduralHematoma")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExtended")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFat")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFlatteningOfTheGyri")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFluidLevel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsForamenOfMagendie")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsForamenOfMonro")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsForamenOfMonroLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsForamenOfMonroRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsForaminaOfLuschka")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsForaminaOfLuschkaLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsForaminaOfLuschkaRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFrontal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFrontobasal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemorrhage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHistologyKnown")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHyperdynamicFluidFlowVoid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHypertrophyChoroidPlexus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIIIVentricle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIVVentricle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInTheAqueduct")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInTheIIIVentricle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfiltration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfratentorial")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInsularCistern")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInterpeduncularCistern")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIschemia")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLateralVentricle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLeftSide")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMeckelCave")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMedian")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOccipital")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPachymeningealEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParenchymalDefect")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParietal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerifocalEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerimesencephalic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPlumpingPosteriorHorns")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPontineCistern")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPontocerebellarCistern")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPontomedullaryCistern")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPosteriorHornLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPosteriorHornRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPrepontineCistern")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsQuadrigeminalCistern")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRightSide")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsScarredResiduals")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSepta")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalVoid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalVoids")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSlitVentricle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStenosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubarachnoidCisterns")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubduralHematoma")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubependymalNodules")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubordinate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuprasellarCistern")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTemporal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTemporalHornExpansion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTemporalHornLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTemporalHornRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsThickeningDuraMater")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTonsilDepression")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTransependymalPressureCaps")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTrigonumLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTrigonumRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVasospasm")
                        .HasColumnType("boolean");

                    b.Property<int?>("MamillopontineDistance")
                        .HasColumnType("integer");

                    b.Property<byte>("MarginType")
                        .HasColumnType("smallint");

                    b.Property<byte>("MassDifferentialDiagnosis2Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("MassDifferentialDiagnosis3Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("MassDifferentialDiagnosisIDescribe1Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("MassDifferentialDiagnosisIKnow1Type")
                        .HasColumnType("smallint");

                    b.Property<int?>("MaxDiameter")
                        .HasColumnType("integer");

                    b.Property<byte>("NormVariantVentricleType")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("PatternType")
                        .HasColumnType("smallint");

                    b.Property<int?>("PontomesencephalicAngle")
                        .HasColumnType("integer");

                    b.Property<int?>("SecondPlane")
                        .HasColumnType("integer");

                    b.Property<byte>("ShapeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ShrinkingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SideType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalVoidType")
                        .HasColumnType("smallint");

                    b.Property<int?>("Size")
                        .HasColumnType("integer");

                    b.Property<byte>("T1WSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2WSignal")
                        .HasColumnType("smallint");

                    b.Property<int?>("ThirdPlane")
                        .HasColumnType("integer");

                    b.Property<byte>("VentricleDifferentialDiagnosis1Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("VentricleDifferentialDiagnosis2Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("CerebrospinalFluidSpacePageId");

                    b.ToTable("CerebrospinalFluidSpaceFindings");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.CerebrospinalFluidSpaceFindingPreset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("ContrastEnhancementDistributionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementQuantitativeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FlairSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsCalcification")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCysts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffusionRestriction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDisplacement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFluidLevel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemorrhage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHypertrophyChoroidPlexus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfiltration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLateralVentricle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerifocalEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalVoid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalVoids")
                        .HasColumnType("boolean");

                    b.Property<byte>("MarginType")
                        .HasColumnType("smallint");

                    b.Property<byte>("MassDifferentialDiagnosisIKnow1Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("ShapeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalVoidType")
                        .HasColumnType("smallint");

                    b.Property<byte>("T1WSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2WSignal")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("CerebrospinalFluidSpaceFindingPresets");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.CerebrospinalFluidSpacePage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AreFindings")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("CerebrospinalFluidSpacePages");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.ClinicalSymptomFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AnamnesisPageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("AtaxiaType")
                        .HasColumnType("smallint");

                    b.Property<byte>("CharacterizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("CognitiveChangeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("CranialNervesType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DisorderOfConsciousnessType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DysesthesiaType")
                        .HasColumnType("smallint");

                    b.Property<byte>("EndocrineDisorderType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FacialNervePalsyDetailsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsAnisocoria")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConductiveHearingLoss")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDisorderOfConsciousnessComa")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnophthalmos")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExophthalmos")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFever")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHeadache")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHearingLoss")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHyperacusis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHypoacusis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHypoakusisSensorineuralHearingLoss")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMeningism")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMydriasis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMyosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNausea")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNauseaVomiting")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPapilledema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPersonalityChanges")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPhotophobia")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPtosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPulsatile")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSensorineuralHearingLoss")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTinnitus")
                        .HasColumnType("boolean");

                    b.Property<byte>("LocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("MotorDeficitType")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("NystagmusType")
                        .HasColumnType("smallint");

                    b.Property<byte>("OlfactoryNerveDetailsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SideType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SpeechDisorderType")
                        .HasColumnType("smallint");

                    b.Property<byte>("TremorType")
                        .HasColumnType("smallint");

                    b.Property<byte>("VertigoType")
                        .HasColumnType("smallint");

                    b.Property<byte>("VisualDisturbanceType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("AnamnesisPageId");

                    b.ToTable("ClinicalSymptomFindings");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.CortexFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AdcSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("ClassificationAdams1")
                        .HasColumnType("smallint");

                    b.Property<byte>("ClassificationAdams2")
                        .HasColumnType("smallint");

                    b.Property<byte>("ClassificationAdams3")
                        .HasColumnType("smallint");

                    b.Property<byte>("ClassificationFazekas1")
                        .HasColumnType("smallint");

                    b.Property<byte>("ClassificationFazekas2")
                        .HasColumnType("smallint");

                    b.Property<byte>("ClassificationFazekas3")
                        .HasColumnType("smallint");

                    b.Property<byte>("ClassificationWHO1")
                        .HasColumnType("smallint");

                    b.Property<byte>("ClassificationWHO2")
                        .HasColumnType("smallint");

                    b.Property<byte>("ClassificationWHO3")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementDistributionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementQuantitativeType")
                        .HasColumnType("smallint");

                    b.Property<decimal>("CortexLocations")
                        .HasColumnType("numeric(20,0)");

                    b.Property<Guid?>("CortexPageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("CorticalThinningType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DescriptionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DetailsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosisType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosisType1")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosisType2")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosisType3")
                        .HasColumnType("smallint");

                    b.Property<byte>("DwiSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FlairWSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("HistologyKnownType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<bool>("Is3RdVentricle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAbscess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAtrophy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBlurringOfWhiteGreyJunction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalcification")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalcified")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConfluent")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCortex")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorticalThinning")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorticalTuber")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCuneus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCysts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDescentOfTheCerebellarTonsils")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffusionRestriction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFat")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFluidLevel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFrontal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGyrusTemporalisTransversus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemorrhage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemorrhagicLacunae")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHerniation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHistologyKnown")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHydrocephalus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInferiorCerebellarPeduncle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfiltration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfratentorial")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInternalStructureSignalVoids")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLateralOccipitotemporalGyrus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLateralVentricleLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLateralVentricleRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLesionOfTheSameEntity")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLingualGyrus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMassEffect")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMesiotemporalSclerosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMicroBleeding")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMiddleCerebellarPeduncle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMidlineShift")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNarrowedSulci")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOccipital")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParietal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParsIntermedia")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerifocalEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPraecuneus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSepta")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubependymalNodules")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubordinate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubstanceDefect")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuperiorCerebellarPeduncle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsT2SignalVoid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTemporal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVentricularHerniation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWhiteMatter")
                        .HasColumnType("boolean");

                    b.Property<byte>("LocalizationFazekasScale")
                        .HasColumnType("smallint");

                    b.Property<byte>("LocalizationModifiedClassificationAdams")
                        .HasColumnType("smallint");

                    b.Property<byte>("LocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("LocalizationWHOClassification")
                        .HasColumnType("smallint");

                    b.Property<byte>("MarginType")
                        .HasColumnType("smallint");

                    b.Property<int?>("MaxDiameter")
                        .HasColumnType("integer");

                    b.Property<int?>("MidlineShift")
                        .HasColumnType("integer");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("RegionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ShapeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SideType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalVoidType")
                        .HasColumnType("smallint");

                    b.Property<int?>("Size")
                        .HasColumnType("integer");

                    b.Property<int?>("Size2ndPlane")
                        .HasColumnType("integer");

                    b.Property<int?>("Size3rdPlane")
                        .HasColumnType("integer");

                    b.Property<byte>("T1WSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2WSignal")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("CortexPageId");

                    b.ToTable("CortexFindings");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.CortexFindingPreset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AdcSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementDistributionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementQuantitativeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosisType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DwiSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FlairWSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsBlurringOfWhiteGreyJunction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCysts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffusionRestriction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFluidLevel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemorrhage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInternalStructureSignalVoids")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLesionOfTheSameEntity")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMassEffect")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNarrowedSulci")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerifocalEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsT2SignalVoid")
                        .HasColumnType("boolean");

                    b.Property<byte>("MarginType")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalVoidType")
                        .HasColumnType("smallint");

                    b.Property<byte>("T1WSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2WSignal")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("CortexFindingPresets");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.CortexPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AreFindings")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("CortexPages");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.ExaminationIndicationFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("AspectScore")
                        .HasColumnType("integer");

                    b.Property<byte>("DetailsType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("ExaminationPageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<int?>("GlasgowComaScale")
                        .HasColumnType("integer");

                    b.Property<int?>("HoursAfterSymptomOnset")
                        .HasColumnType("integer");

                    b.Property<byte>("HuntHessScaleType")
                        .HasColumnType("smallint");

                    b.Property<byte>("IntracranialHemorrhageType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsHighVelocityTrauma")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntracranialHemorrhage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMinorTrauma")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMultipleSclerosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPolytrauma")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRefractoryEpilepsy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVasculitis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWakeUpStroke")
                        .HasColumnType("boolean");

                    b.Property<byte>("IschemiaIntracranialHemorrhageType")
                        .HasColumnType("smallint");

                    b.Property<int?>("Month")
                        .HasColumnType("integer");

                    b.Property<int?>("NihssScore")
                        .HasColumnType("integer");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<int?>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ExaminationPageId");

                    b.ToTable("ExaminationIndicationFindings");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.ExaminationPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBrainMRI")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBrainstemMRI")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOrbitaMRI")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParanasalSinusMRI")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPituitaryMRI")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("ExaminationPages");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.FacialSkullFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("AbscessMaxDiameter")
                        .HasColumnType("integer");

                    b.Property<int?>("AggerNasiCells2NdPlane")
                        .HasColumnType("integer");

                    b.Property<int?>("AggerNasiCells3RdPlane")
                        .HasColumnType("integer");

                    b.Property<int?>("AggerNasiCellsSize")
                        .HasColumnType("integer");

                    b.Property<byte>("AssessmentType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ChandlerClassificationDiagnosisType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ChandlerClassificationLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ChandlerClassificationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("CharacterizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ClassificationType")
                        .HasColumnType("smallint");

                    b.Property<int?>("ConchaBullosa2NdPlane")
                        .HasColumnType("integer");

                    b.Property<int?>("ConchaBullosa3RdPlane")
                        .HasColumnType("integer");

                    b.Property<int?>("ConchaBullosaSize")
                        .HasColumnType("integer");

                    b.Property<byte>("ConchaeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastDistributionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementType")
                        .HasColumnType("smallint");

                    b.Property<byte>("CorticalisType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DescriptionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis1LocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis1Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis2Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis3Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("DiscDisplacementType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("FacialSkullPageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FlairSignalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<int?>("InfraorbitalHallerCell2NdPlane")
                        .HasColumnType("integer");

                    b.Property<int?>("InfraorbitalHallerCell3RdPlane")
                        .HasColumnType("integer");

                    b.Property<int?>("InfraorbitalHallerCellSize")
                        .HasColumnType("integer");

                    b.Property<bool>("Is11")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is12")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is13")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is14")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is15")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is16")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is17")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is18")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is21")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is22")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is23")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is24")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is25")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is26")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is27")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is28")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is31")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is32")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is33")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is34")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is35")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is36")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is37")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is38")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is41")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is42")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is43")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is44")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is45")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is46")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is47")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is48")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAbscess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAccessoryNerveXI")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdjacentStructuralChangesDueToPressure")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAggerNasiCells")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAggerNasiLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAggerNasiMedian")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAggerNasiRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAlongANerveCord")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAlveolarProcess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAlveolarRidge")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAnteriorChamber")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAnteriorCranialFossa")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAntrum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAsymmetryOfTheSkullBase")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAuricle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBaseOfTongue")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBoneEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBoneMarrowContrastEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBrainAbscess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBulbusOculi")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalcification")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCarunculaSublingualis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCavernosusSinus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCephalhaematoma")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCervicalLymphadenopathy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCiliaryBody")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCompressionBrainstem")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConchaBullosa")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConchaBullosaLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConchaBullosaRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCondylarProcess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConstrictorPharyngisSuperiorMuscle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCoronoidProcess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorpusMandibulae")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorpusMaxillae")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCysts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeepMedialLobe")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDehiscenceOfTheSkullBase")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeviatedNasalSeptum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffuse")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffuseFusiform")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffuseWideningOfTheMucosa")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffusionRestriction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiscDeformation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiscDeformationDistinct")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiscDeformationPerforation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiscDeformationResorption")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiscDeformationSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiscDisplacement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiscusReduction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiscusReductionSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDisplacement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDuctusEndolymphaticus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEccentric")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEethmoidAirCells")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEpiduralAbscess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEpiglottisUpperMargin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEpitympanon")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEthmoidBone")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEthmoidInfundibulum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExternalAcousticCanalMeatusAcusticusExternus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExtraconalSpace")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFacialNerve")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFacialNerveCanal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFacialNerveVII")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFat")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFissuraOrbitalisInferior")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFissuraOrbitalisSuperior")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFloor")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsForamenMagnum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsForamenStylomastoideum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFossaPterygopalatina")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFrenulumLinguae")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFrontal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFrontalBone")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFrontalSinus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFungusBall")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGaleaHaematoma")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGlossopharyngealNerveIX")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHardPalate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemorrhage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHiatusSemilunaris")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHydrocephalus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHypoglossalNerveXII")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHypotympanon")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInStructuresOutsideSinus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfiltration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInflitrationMusculatureOfFloorOfMouth")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfraorbitalGroove")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfraorbitalHallerCell")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfraorbitalHallerLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfraorbitalHallerRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfraorbitalNerve")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfratemporalFossa")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInnerEarLabyrinth")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInternalAcousticCanal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInternalCarotidArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInternalJugularVein")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntraconalSpace")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntracranialSpread")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntraorbitalSpread")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLacrimalBone")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLacrimalGland")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLaminaCribrosa")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLaminaePapyraceae")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLateralPharyngealWall")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLateralWall")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLeftLowerJaw")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLeftUpperJaw")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLens")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLocalOsteodestruction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLowerLip")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLymphadenopathy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMandibularBone")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMastoid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMaxilla")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMaxillaAlveolarRidge")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMaxillaryBone")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMaxillaryNerveV2")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMaxillarySinus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMeatusAcusticusInternus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMeningeaMediaArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMeningeaRecurrensArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMesotympanum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMiddleCranialFossa")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMiddleEarTympanum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMinorSalivaryGlands")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMirrorFormation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMoreThan1LesionOfTheSameEntity")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMucosalPolyps")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMuscleBellyThickening")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMuscleFattyDegeneration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMuscularAtrophy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMusculatureOfFloorOfMouth")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNMandibularisV3")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNasalBone")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNasalSeptum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNasofrontalDuct")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNecroses")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNodularParts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsObliquusInferiorMuscle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsObliquusSuperiorMuscle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOccipital")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOccipitalBone")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOculomotorNerveIII")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOlfactoryNerveI")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOnodiCells")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOnodiCellsLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOnodiCellsRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOphthalmicNerveV1")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOpticNerveII")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOpticNerveIICompartment")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOpticNerveIIOther")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOralMucosalSpaceOms")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOrbitalComplications")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOrbitalFloor")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOropharynx")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOsseousChanges")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOsteomyelitis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOsteomyelitisMandible")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOsteomyelitisMaxilla")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOstiomeatalComplex")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPalatineBone")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPalatineTonsils")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParietal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParotidDuctStenonSDuct")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParotidGland")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPepperAndSaltSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerifocalEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerineural")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerineuralSpread")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeriostealReaction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeritonsillarSpace")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPoorlyDemarcatedOsteolysis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPorusAcusticusInternus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPosteriorChamber")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPosteriorFossa")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPosteriorWall")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRamusMandibulae")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectusInferiorMuscle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectusLateralisMuscle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectusMedialisMuscle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectusSuperiorMuscle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRetentionCysts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRetinalDetachment")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRightLowerJaw")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRightUpperJaw")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRootOfTheTongueRot")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSaccusEndolymphaticus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSclera")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSepta")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSequester")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSigmoidSinus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalVoid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalVoids")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSinusThrombosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSkullBase")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSoftPalate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSoftTissueFistula")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSolidParts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSphenoidBone")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSphenoidBoneAnterior")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSphenoidBoneMiddle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSphenoidSinus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubduralEmpyema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSublingualGland")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSublingualSpaceSls")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubmandibularDuctWhartonSDuct")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubmandibularFossa")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubmandibularGland")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubmandibularMandible")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubmandibularSpaceSms")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubordinate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubperiosteal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuperficialLobe")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuperiorOphthalmicVein")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuperiorOrbitalFissure")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTemporal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTemporalBoneApex")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTemporalBoneApexAbscess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTemporalBoneMiddle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTemporalBonePosterior")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsThickeningOfTheCalotte")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsThickeningOfTheMaxillarySinusWall")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsThickeningOfTheMaxillarySinusWalls")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsThinningOfTheBonyBoundary")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTongueBaseTonsil")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTrigeminalNerveV")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTrigonumSubmandibulare")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTrochlearNerveIV")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTubaAuditiva")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTubular")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUncinateProcess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUnilateralMuscleHypotonia")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUpperLip")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUpperLipAlveolarRidge")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUvula")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVagusNerveX")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsValleculae")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVestibulochochlearNerveVIII")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVitreousBody")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVomer")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWhartonDuctOcclusion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsZygomaticBone")
                        .HasColumnType("boolean");

                    b.Property<byte>("JawTeethAssessmentType")
                        .HasColumnType("smallint");

                    b.Property<byte>("JawTeethDiagnosisType")
                        .HasColumnType("smallint");

                    b.Property<byte>("JawTeethType")
                        .HasColumnType("smallint");

                    b.Property<byte>("LevelType")
                        .HasColumnType("smallint");

                    b.Property<byte>("MarginType")
                        .HasColumnType("smallint");

                    b.Property<int?>("MaxDiameter")
                        .HasColumnType("integer");

                    b.Property<int?>("MaxDiameterBrainAbscess")
                        .HasColumnType("integer");

                    b.Property<int?>("MaxDiameterEpiduralAbscess")
                        .HasColumnType("integer");

                    b.Property<int?>("MaxDiameterFungusBall")
                        .HasColumnType("integer");

                    b.Property<int?>("MaxDiameterMucosa")
                        .HasColumnType("integer");

                    b.Property<int?>("MaxDiameterMuscleBelly")
                        .HasColumnType("integer");

                    b.Property<int?>("MaxDiameterSubduralEmpyema")
                        .HasColumnType("integer");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<int?>("OnodiCells2NdPlane")
                        .HasColumnType("integer");

                    b.Property<int?>("OnodiCells3RdPlane")
                        .HasColumnType("integer");

                    b.Property<int?>("OnodiCellsSize")
                        .HasColumnType("integer");

                    b.Property<byte>("OralCavityDiagnosis1LocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("OralCavityDiagnosis1Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("OralCavityDiagnosis2Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("OralCavityDiagnosis3Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("OrbitaDiagnosis1LocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("OrbitaDiagnosis1Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("OrbitaDiagnosis2Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("OrbitaDiagnosis3Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("OsseousChangesType")
                        .HasColumnType("smallint");

                    b.Property<byte>("OtherNonOdontogenicCystType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ParanasalSinusesDiagnosis1LocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ParanasalSinusesDiagnosis1Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("ParanasalSinusesDiagnosis2Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("ParanasalSinusesDiagnosis3Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("SalivaryGlandsDiagnosis1LocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SalivaryGlandsDiagnosis1Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("SalivaryGlandsDiagnosis2Type")
                        .HasColumnType("smallint");

                    b.Property<int?>("SequesterMaxDiameter")
                        .HasColumnType("integer");

                    b.Property<int?>("SequesterSize2ndPlane")
                        .HasColumnType("integer");

                    b.Property<int?>("SequesterSize3rdPlane")
                        .HasColumnType("integer");

                    b.Property<byte>("ShapeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SideType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalVoidType")
                        .HasColumnType("smallint");

                    b.Property<int?>("Size")
                        .HasColumnType("integer");

                    b.Property<int?>("Size2ndPlane")
                        .HasColumnType("integer");

                    b.Property<int?>("Size3rdPlane")
                        .HasColumnType("integer");

                    b.Property<byte>("SymmetryType")
                        .HasColumnType("smallint");

                    b.Property<byte>("T1wSignalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2wSignalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ToothAnomaliesType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("FacialSkullPageId");

                    b.ToTable("FacialSkullFindings");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.FacialSkullFindingPreset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("ContrastDistributionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementType")
                        .HasColumnType("smallint");

                    b.Property<string>("DifferentialDiagnosis")
                        .HasColumnType("text");

                    b.Property<byte>("DifferentialDiagnosis1LocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FlairSignalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsAbscess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdjacentStructuralChangesDueToPressure")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAntrum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalcification")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCompressionBrainstem")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCysts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffuseWideningOfTheMucosa")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffusionRestriction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDisplacement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEethmoidAirCells")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEpitympanon")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsForamenMagnum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFossaPterygopalatina")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFrontalSinus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemorrhage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHypotympanon")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfiltration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfratemporalFossa")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInnerEarLabyrinth")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInternalAcousticCanal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLocalOsteodestruction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMastoid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMaxillarySinus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMesotympanum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMiddleCranialFossa")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMiddleEarTympanum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMirrorFormation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMucosalPolyps")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMuscleBellyThickening")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNecroses")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsObliquusSuperiorMuscle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOpticNerveIICompartment")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOralMucosalSpaceOms")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOsteomyelitis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOsteomyelitisMandible")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParotidGland")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPepperAndSaltSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerifocalEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerineuralSpread")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPorusAcusticusInternus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPosteriorFossa")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectusInferiorMuscle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectusLateralisMuscle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectusMedialisMuscle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectusSuperiorMuscle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRetentionCysts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRootOfTheTongueRot")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalVoid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalVoids")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSphenoidBoneMiddle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSphenoidSinus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSublingualSpaceSls")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubmandibularSpaceSms")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuperficialLobe")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTemporalBonePosterior")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsThinningOfTheBonyBoundary")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTubular")
                        .HasColumnType("boolean");

                    b.Property<byte>("MarginType")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("OralCavityDiagnosis1LocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("OrbitaDiagnosis1LocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ParanasalSinusesDiagnosis1LocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SalivaryGlandsDiagnosis1LocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ShapeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalVoidType")
                        .HasColumnType("smallint");

                    b.Property<byte>("T1wSignalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2wSignalType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("FacialSkullFindingPresets");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.FacialSkullPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AreFindings")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("FacialSkullPages");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.MeningesFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AdcSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("CharacterizationHematomaType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementDistributionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementQuantitativeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("CystType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DescriptionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DiffuseDifferentialDiagnosis1")
                        .HasColumnType("smallint");

                    b.Property<byte>("DiffuseDifferentialDiagnosis2")
                        .HasColumnType("smallint");

                    b.Property<byte>("DwiSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("FatType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FlairSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("GrowthPatternType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HistologyKnownType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsAbscess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdjacentContusion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAlongFalx")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAlongTentorium")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAssociatedInfarction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBiconvex")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBoneInfiltration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBridgeVeinDisplacementInward")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalcification")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCerebellopontineAngle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConcomitantCerebrospinalFluidCongestion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsContrastEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsContrastEnhancementMembrane")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsContrecoupSdh")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCrossingSutures")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCysts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffusionRestriction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDisplacedDuraBetweenEdhAndBrain")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDuraTailSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDuralThickening")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDuraleAttachmentExceeded")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEmpyema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFalx")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFat")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFluid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFluidLevel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsForamenMagnum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFrontal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemorrhageHemosiderin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHerniation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHistologyKnown")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHydrocephalus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfratentorial")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInsularCistern")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntraforaminalFissuralGrowth")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntrameatalGrowth")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntrasellar")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLaminaCribrosa")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLeptomeninges")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLesionOfTheSameEntity")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLocalHyperostosisOfTheBone")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLocalVenousStasis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMajorAttachmentNotExceeded")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMedian")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMidlineShift")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOccipital")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOpticNerveSheath")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPachymeninges")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParietal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerifocalEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPosteriorClinoidProcess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSepta")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSeptations")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSickleShaped")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalVoid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalVoids")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSkullFracture")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSphenoidWing")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubduralHygroma")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubordinate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSulcusSigmoideus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuturesNotExceeded")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTemporal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTentorium")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsThickening")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTrigoneOfTheLateralVentricle")
                        .HasColumnType("boolean");

                    b.Property<byte>("MarginType")
                        .HasColumnType("smallint");

                    b.Property<byte>("MassDifferentialDiagnosis1")
                        .HasColumnType("smallint");

                    b.Property<byte>("MassDifferentialDiagnosis2")
                        .HasColumnType("smallint");

                    b.Property<byte>("MassDifferentialDiagnosis3")
                        .HasColumnType("smallint");

                    b.Property<byte>("MassDifferentialDiagnosisLocalization")
                        .HasColumnType("smallint");

                    b.Property<int?>("MaxExtension")
                        .HasColumnType("integer");

                    b.Property<int?>("MaxWidth")
                        .HasColumnType("integer");

                    b.Property<Guid?>("MeningesPageId")
                        .HasColumnType("uuid");

                    b.Property<int?>("MeningesWidth")
                        .HasColumnType("integer");

                    b.Property<int?>("MidlineDeviation")
                        .HasColumnType("integer");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("RegionType")
                        .HasColumnType("smallint");

                    b.Property<int?>("SecondPlane")
                        .HasColumnType("integer");

                    b.Property<byte>("ShapeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SideType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalVoidType")
                        .HasColumnType("smallint");

                    b.Property<int?>("Size")
                        .HasColumnType("integer");

                    b.Property<byte>("T1WSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("T1WSignalDiffuse")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2WSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2WSignalDiffuse")
                        .HasColumnType("smallint");

                    b.Property<int?>("ThirdPlane")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MeningesPageId");

                    b.ToTable("MeningesFindings");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.MeningesFindingPreset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("ContrastEnhancementDistributionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementQuantitativeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FlairSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsCysts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDuraTailSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLocalHyperostosisOfTheBone")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerifocalEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalVoid")
                        .HasColumnType("boolean");

                    b.Property<byte>("MarginType")
                        .HasColumnType("smallint");

                    b.Property<byte>("MassDifferentialDiagnosisLocalization")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("ShapeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalVoidType")
                        .HasColumnType("smallint");

                    b.Property<byte>("T1WSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2WSignal")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("MeningesFindingPresets");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.MeningesPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AreFindings")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("MeningesPages");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.PreviousInterventionsTherapiesFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AnamnesisPageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("Month")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AnamnesisPageId");

                    b.ToTable("PreviousInterventionsTherapiesFindings");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.SellarRegionFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("CarotidArterySideType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastDistributionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastQuantitativeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DescriptionType")
                        .HasColumnType("smallint");

                    b.Property<int?>("ExtensionSize")
                        .HasColumnType("integer");

                    b.Property<int?>("ExtensionSize2ndPlane")
                        .HasColumnType("integer");

                    b.Property<int?>("ExtensionSize3rdPlane")
                        .HasColumnType("integer");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FlairSignalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<bool>("Is1LesionOfTheSameEntity")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAbducensNerveVI")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdenohypophysis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAffectionOpticChiasm")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBonyRemodeling")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalcification")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCavernousSinus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsContactWithCarotidArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCysts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDetectionOfLesion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffusionRestriction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDisplacement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDisplacementOfPituitaryStalk")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDuraMaterMeningen")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDuraTailSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExtensionToSuprasellar")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFat")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFluidLevel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemorrhage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHydrocephalus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfiltration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfiltrationIntoCavernousSinus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInternalCarotidArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNasopharynx")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNeurohypophysis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOculomotorNerveIII")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOlfactoryNerveII")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOpticChiasm")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOpticNerveI")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerifocalEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPituitaryStalk")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSepta")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalVoid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalVoids")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSphenoidSinus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubordinate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspicionOfInfiltration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsToothBoneFormation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTrochlearNerveIV")
                        .HasColumnType("boolean");

                    b.Property<byte>("MarginType")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("PituitaryStalkSideType")
                        .HasColumnType("smallint");

                    b.Property<byte>("RelationToThePituitaryGlandType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SellarRegionDiagnosis1Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("SellarRegionDiagnosis2Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("SellarRegionDiagnosis3Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("SellarRegionDiagnosisLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("SellarRegionPageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("ShapeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SideType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalVoidType")
                        .HasColumnType("smallint");

                    b.Property<byte>("T1wSignalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2wSignalType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("SellarRegionPageId");

                    b.ToTable("SellarRegionFindings");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.SellarRegionFindingPreset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("ContrastDistributionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastQuantitativeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FlairSignalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsCysts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDuraTailSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFluidLevel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerifocalEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSepta")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalVoid")
                        .HasColumnType("boolean");

                    b.Property<byte>("MarginType")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("SellarRegionDiagnosisLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ShapeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalVoidType")
                        .HasColumnType("smallint");

                    b.Property<byte>("T1wSignalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2wSignalType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("SellarRegionFindingPresets");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.SellarRegionPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AreFindings")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("SellarRegionPages");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.Sequence", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Is3D")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsADCMap")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalculated")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsChemicalShiftImaging")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCineImaging")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCompressedSense")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDynamicsAfterContrastInjection")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEpiDwi")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHasteNonEpiDwi")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHighResolution")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParallelImaging")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSaturatedFat")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubtraction")
                        .HasColumnType("boolean");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("OrientationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("OtherApplicationsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SequenceType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("TechnologyPageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("WeightingType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("TechnologyPageId");

                    b.ToTable("Sequences");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.SummaryFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AtraumaticEtiologyType")
                        .HasColumnType("smallint");

                    b.Property<byte>("AtrophyNeurodegenerationType")
                        .HasColumnType("smallint");

                    b.Property<int?>("BlackHoles")
                        .HasColumnType("integer");

                    b.Property<byte>("CharacterizationType")
                        .HasColumnType("smallint");

                    b.Property<int?>("Cortical")
                        .HasColumnType("integer");

                    b.Property<byte>("EtiologyType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FazekasType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HemorrhageLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HerniationType")
                        .HasColumnType("smallint");

                    b.Property<int?>("Infratentorial")
                        .HasColumnType("integer");

                    b.Property<bool>("IsACAInfarction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAbsentSwallowTailSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsActiveLesions")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBlackHoles")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCompressionOfTheAqueduct")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorpusCallosumUndersurface")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCortical")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDawsonFinger")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDuretHemorrhage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnlargedPerivascularSpaces")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFieldHockeyStickSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFracture")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFrontalLobeAtrophy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGlobalAtrophy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHippocampalAtrophy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHotCrossBunSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHummingbirdSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHydrocephalus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIncompleteRingEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfarctLacunae")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfratentorial")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfratentorialAccentuation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntracranialHypotension")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsJuxtacortical")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsKoedamScore")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLocallyFlattenedSulci")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMCAInfarction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMesialTemporalLobeAtrophy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMickeyMouseSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMicroBleeding")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMidlineShift")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMorningGlorySign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNewLesions")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsObstructiveHydrocephalus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOccipitalLobeAtrophy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOpticNeuritis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPCAInfarction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParietalLobeAtrophy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerivenousSpread")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeriventricular")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPulvinarSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsReducedMidbrainToPonsRatio")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSideAsymmetryInFavorOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSpatialDissemination")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSpinal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStrategicInfarcts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSupratentorialAccentuation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTemporalDissemination")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTemporalLobeAtrophy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTonsillarNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTumefactiveMS")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUnilateral")
                        .HasColumnType("boolean");

                    b.Property<int?>("Juxtacortical")
                        .HasColumnType("integer");

                    b.Property<byte>("KoedamScore")
                        .HasColumnType("smallint");

                    b.Property<byte>("MesialTemporalLobeAtrophyScore")
                        .HasColumnType("smallint");

                    b.Property<int?>("MidlineShiftInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("NeurodegenerationLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("NeurodegenerationType")
                        .HasColumnType("smallint");

                    b.Property<int?>("NewLesions")
                        .HasColumnType("integer");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("OtherDiseaseType")
                        .HasColumnType("smallint");

                    b.Property<int?>("Periventricular")
                        .HasColumnType("integer");

                    b.Property<byte>("PossibleEpileptogenicFindingsType")
                        .HasColumnType("smallint");

                    b.Property<byte?>("ProgressControlMonth")
                        .HasColumnType("smallint");

                    b.Property<byte>("ProgressControlType")
                        .HasColumnType("smallint");

                    b.Property<int?>("ProgressControlYear")
                        .HasColumnType("integer");

                    b.Property<byte>("SideType")
                        .HasColumnType("smallint");

                    b.Property<int?>("Spinal")
                        .HasColumnType("integer");

                    b.Property<byte>("SummaryDiagnosisType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("SummaryPageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("WedgingType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("SummaryPageId");

                    b.ToTable("SummaryFindings");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.SummaryPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("CourseType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBiopsy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCardiology")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCcdSonographyNeckVessels")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCta")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnt")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInternalMedicine")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMra")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMriWithIvContrastAgent")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNeurology")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNeurosurgery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOphthalmology")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPetCt")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsScintigraphy")
                        .HasColumnType("boolean");

                    b.Property<byte>("PeriodType")
                        .HasColumnType("smallint");

                    b.Property<byte>("RegressiveType")
                        .HasColumnType("smallint");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("SummaryPages");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.TechnologyPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BarcodeCMCharge")
                        .HasColumnType("text");

                    b.Property<byte>("CMReinforcedType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastMediumType")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("ContrastQuantity")
                        .HasColumnType("numeric");

                    b.Property<byte>("ImageQualityType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAliasing")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCMSideEffect")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCortisoneIV")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFailedSubtraction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFlowArtifacts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsH1BlockerIV")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsH2BlockerIV")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMetalArtifacts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMotion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNotFurtherSpecified")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsO2Administration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOther")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubcutaneousEpinephrine")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSusceptibilityArtifacts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTimingInadequate")
                        .HasColumnType("boolean");

                    b.Property<byte>("MagneticFieldStrengthType")
                        .HasColumnType("smallint");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<byte>("SequencesType")
                        .HasColumnType("smallint");

                    b.Property<string>("SetName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("TechnologyPages");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.VesselsFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("ADCMapType")
                        .HasColumnType("smallint");

                    b.Property<int>("AffectedSegmentsOrVesselsLocation")
                        .HasColumnType("integer");

                    b.Property<byte>("AlignmentOfAneurysmDomeType")
                        .HasColumnType("smallint");

                    b.Property<int?>("AneurysmNeckWidth")
                        .HasColumnType("integer");

                    b.Property<byte>("ArterialTerritoryType")
                        .HasColumnType("smallint");

                    b.Property<decimal>("BasalGangliaLocations")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("CerebralVenousThrombosisLocations")
                        .HasColumnType("integer");

                    b.Property<byte>("CharacterizationThrombusType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementType")
                        .HasColumnType("smallint");

                    b.Property<decimal>("CortexLocations")
                        .HasColumnType("numeric(20,0)");

                    b.Property<byte>("DWISignalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DetailsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosisType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DiffusionImagingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DiffusionRestrictionType")
                        .HasColumnType("smallint");

                    b.Property<int?>("ExtensionAneurysm")
                        .HasColumnType("integer");

                    b.Property<byte>("FLAIRDWIRatioType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FormType")
                        .HasColumnType("smallint");

                    b.Property<byte>("GradingOcclusionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("GradingType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("ImageFileId")
                        .HasColumnType("uuid");

                    b.Property<byte>("InfarctStageType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsAnteriorCommunicatingArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBloomingArtifact")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCerebralEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCervicalVesselElongation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCollateralizationOfTheICAECA")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCongestiveHemorrhage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsContrastFillingDefectinMRV")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCortex")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCortexAffected")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCortexWedgeShapedConfiguration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorticalVeins")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorticalVeinsLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorticalVeinsRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCuneus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDDArtifactTOFAngiography")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDissectionOfUpstreamcervicalArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDownstreamInfarctAreas")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDuralEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEccentric")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEctasiaOfTheUpstream")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsElongatedthrombusCourse")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEmptyDeltaSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEtatLacunaire")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFrontal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGeneralizedCerebralEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGyrusTemporalisTransversus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemorrhage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemorrhagicTransformation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHighGradeStenosisupstreamcervicalArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInferiorCerebellarPeduncle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInferiorPetrosalSinus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInflammatoryChange")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfratentorial")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInternalCerebralVeins")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInternalCerebralVeinsLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInternalCerebralVeinsRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntraarterialFLAIRSignalEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIschemia")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLateralOccipitotemporalGyrus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLeptomeningealcollaterals")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLingualGyrus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMiddleCerebellarPeduncle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMissingFlowVoid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNarrowedSulci")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOccipital")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOcclusionOfUpstreamcervicalArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOstialStenosisaffectedVessel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPWIDWIMismatch")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParenchymatous")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParietal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParsIntermedia")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerfusionOfTheICAPars")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerifocalGliosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPetechial")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPetechialhemorrhages")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPosteriorCommunicatingArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPraecuneus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsProlongationOfMTT")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsProlongationOfTTP")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPseudolaminarNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRelativeReductionCBFCBV")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRetrogradePerfusionofTheOphthalmic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsReverseFlow")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsReverseFlowSuspected")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSAH")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSigmoidSinus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalVoidInphaseContrast")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSinusCavernosus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSphenoparietalSinusLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSphenoparietalSinusRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStringOfPearlsAspect")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubarachnoidHemorrhage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuperiorCerebellarPeduncle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuperiorPetrosalSinus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuperiorSagittalSinus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspicionOfReverseFlow")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSwellingOfTheGyri")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTemporal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsThrombosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsThrombusDetection")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsThrombusInUpstreamcervicalArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsThroughContralateralexternalCarotidArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsThroughIpsilateralvertebralArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTransverseSinus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsV1")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsV2")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsV3")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsV4")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVascularOcclusion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVeinOfLabbeLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVeinOfLabbeRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVentricularHerniation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWedgeShapedConfiguration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWhiteMatter")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWhiteMatterAffected")
                        .HasColumnType("boolean");

                    b.Property<byte>("LocalizationAneurysmaType")
                        .HasColumnType("smallint");

                    b.Property<int?>("LongitudinalExpansionOfThrombus")
                        .HasColumnType("integer");

                    b.Property<byte>("MRPerfusionType")
                        .HasColumnType("smallint");

                    b.Property<int?>("MinDiameterresidualLumen")
                        .HasColumnType("integer");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("PatternType")
                        .HasColumnType("smallint");

                    b.Property<int?>("PenumbraTissueAtRisk")
                        .HasColumnType("integer");

                    b.Property<string>("PictureNumber")
                        .HasColumnType("text");

                    b.Property<int?>("SecondPlane")
                        .HasColumnType("integer");

                    b.Property<byte>("SegmentsBouthillierLocations")
                        .HasColumnType("smallint");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("text");

                    b.Property<byte>("ShapeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SideType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalT1w")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalT2Flare")
                        .HasColumnType("smallint");

                    b.Property<byte>("SubarachnoidHemorrhageLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SubarachnoidHemorrhageType")
                        .HasColumnType("smallint");

                    b.Property<int?>("ThirdPlane")
                        .HasColumnType("integer");

                    b.Property<int>("VascularTerritoryLocations")
                        .HasColumnType("integer");

                    b.Property<byte>("VascularTerritoryType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("VesselsPageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("WhiteMatterType")
                        .HasColumnType("smallint");

                    b.Property<byte>("WithAVShuntType")
                        .HasColumnType("smallint");

                    b.Property<byte>("WithoutAVShuntType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("ImageFileId");

                    b.HasIndex("VesselsPageId");

                    b.ToTable("VesselsFindings");
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.VesselsPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AreFindings")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("VesselsPages");
                });

            modelBuilder.Entity("RadioReport.Common.Logic.Models.PageInfo", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany("Pages")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.Common.Logic.Models.ReportModels.ReportResult", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany("ReportResults")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.Common.Module.Logic.Models.Pages.PatientInformation", b =>
                {
                    b.HasOne("RadioReport.HeadMRT.Domain.Models.ExaminationPage", null)
                        .WithOne("PatientInformation")
                        .HasForeignKey("RadioReport.Common.Module.Logic.Models.Pages.PatientInformation", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.Common.Module.Logic.Models.ReportGenerator.ReportSchemaSession", b =>
                {
                    b.HasOne("RadioReport.Common.Module.Logic.Models.ReportGenerator.ReportSchema", null)
                        .WithOne("Session")
                        .HasForeignKey("RadioReport.Common.Module.Logic.Models.ReportGenerator.ReportSchemaSession", "ReportSchemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.AnamnesisPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.BasalNucleiFinding", b =>
                {
                    b.HasOne("RadioReport.HeadMRT.Domain.Models.BasalNucleiPage", null)
                        .WithMany("Findings")
                        .HasForeignKey("BasalNucleiPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.BasalNucleiPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.BrainstemCranialNervesFinding", b =>
                {
                    b.HasOne("RadioReport.HeadMRT.Domain.Models.BrainstemCranialNervesPage", null)
                        .WithMany("Findings")
                        .HasForeignKey("BrainstemCranialNervesPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.BrainstemCranialNervesPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.CMSideEffect", b =>
                {
                    b.HasOne("RadioReport.HeadMRT.Domain.Models.TechnologyPage", null)
                        .WithMany("CMSideEffects")
                        .HasForeignKey("TechnologyPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.CerebrospinalFluidSpaceFinding", b =>
                {
                    b.HasOne("RadioReport.HeadMRT.Domain.Models.CerebrospinalFluidSpacePage", null)
                        .WithMany("Findings")
                        .HasForeignKey("CerebrospinalFluidSpacePageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.CerebrospinalFluidSpacePage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.ClinicalSymptomFinding", b =>
                {
                    b.HasOne("RadioReport.HeadMRT.Domain.Models.AnamnesisPage", null)
                        .WithMany("ClinicalSymptomFindings")
                        .HasForeignKey("AnamnesisPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.CortexFinding", b =>
                {
                    b.HasOne("RadioReport.HeadMRT.Domain.Models.CortexPage", null)
                        .WithMany("Findings")
                        .HasForeignKey("CortexPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.CortexPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.ExaminationIndicationFinding", b =>
                {
                    b.HasOne("RadioReport.HeadMRT.Domain.Models.ExaminationPage", null)
                        .WithMany("Findings")
                        .HasForeignKey("ExaminationPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.ExaminationPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.FacialSkullFinding", b =>
                {
                    b.HasOne("RadioReport.HeadMRT.Domain.Models.FacialSkullPage", null)
                        .WithMany("Findings")
                        .HasForeignKey("FacialSkullPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.FacialSkullPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.MeningesFinding", b =>
                {
                    b.HasOne("RadioReport.HeadMRT.Domain.Models.MeningesPage", null)
                        .WithMany("Findings")
                        .HasForeignKey("MeningesPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.MeningesPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.PreviousInterventionsTherapiesFinding", b =>
                {
                    b.HasOne("RadioReport.HeadMRT.Domain.Models.AnamnesisPage", null)
                        .WithMany("PreviousInterventionsTherapiesFindings")
                        .HasForeignKey("AnamnesisPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.SellarRegionFinding", b =>
                {
                    b.HasOne("RadioReport.HeadMRT.Domain.Models.SellarRegionPage", null)
                        .WithMany("Findings")
                        .HasForeignKey("SellarRegionPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.SellarRegionPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.Sequence", b =>
                {
                    b.HasOne("RadioReport.HeadMRT.Domain.Models.TechnologyPage", null)
                        .WithMany("Sequences")
                        .HasForeignKey("TechnologyPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.SummaryFinding", b =>
                {
                    b.HasOne("RadioReport.HeadMRT.Domain.Models.SummaryPage", null)
                        .WithMany("Findings")
                        .HasForeignKey("SummaryPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.SummaryPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.TechnologyPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.VesselsFinding", b =>
                {
                    b.HasOne("RadioReport.Common.Module.Logic.Models.Pages.ImageFile", "UploadedImageFile")
                        .WithMany()
                        .HasForeignKey("ImageFileId");

                    b.HasOne("RadioReport.HeadMRT.Domain.Models.VesselsPage", null)
                        .WithMany("Findings")
                        .HasForeignKey("VesselsPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.HeadMRT.Domain.Models.VesselsPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
