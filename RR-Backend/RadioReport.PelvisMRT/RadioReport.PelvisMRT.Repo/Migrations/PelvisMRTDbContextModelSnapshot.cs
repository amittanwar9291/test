// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RadioReport.PelvisMRT.Repo;

namespace RadioReport.PelvisMRT.Repo.Migrations
{
    [DbContext(typeof(PelvisMRTDbContext))]
    partial class PelvisMRTDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("RadioReport.Common.Logic.Models.PageInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("boolean");

                    b.Property<Guid>("PageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("PageNumber")
                        .HasColumnType("smallint");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<string>("TypeName")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("WasModified")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("PageInfos");
                });

            modelBuilder.Entity("RadioReport.Common.Logic.Models.ReportModels.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccessionNumber")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Evaluation")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ExaminationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ExaminationType")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("FindingsDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FreeField")
                        .HasColumnType("text");

                    b.Property<Guid>("InstituteId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("boolean");

                    b.Property<string>("Language")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<Guid>("LicenseFractionId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("LicensingDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<byte>("PatientAge")
                        .HasColumnType("smallint");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uuid");

                    b.Property<string>("PresetCode")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<byte>("Status")
                        .HasColumnType("smallint");

                    b.Property<string>("StudyInstanceUID")
                        .HasColumnType("text");

                    b.Property<byte>("TotalPageCount")
                        .HasColumnType("smallint");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("RadioReport.Common.Logic.Models.ReportModels.ReportResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Approved")
                        .HasColumnType("text");

                    b.Property<string>("Discussion")
                        .HasColumnType("text");

                    b.Property<Guid>("InstituteId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsICD10")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLocalizer")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsReferenceImage")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<string>("ReportSummary")
                        .HasColumnType("text");

                    b.Property<string>("ReportTypeName")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("ReportResults");
                });

            modelBuilder.Entity("RadioReport.Common.Logic.Models.ReportModels.ReportSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("InstituteId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("ReportSession");
                });

            modelBuilder.Entity("RadioReport.Common.Module.Logic.Models.Pages.ImageFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FileName")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ObjectName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ImageFiles");
                });

            modelBuilder.Entity("RadioReport.Common.Module.Logic.Models.Pages.PatientInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<byte?>("Age")
                        .HasColumnType("smallint");

                    b.Property<byte>("Gender")
                        .HasColumnType("smallint");

                    b.Property<int>("Height")
                        .HasColumnType("integer");

                    b.Property<int>("Weight")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("PatientInformation");
                });

            modelBuilder.Entity("RadioReport.Common.Module.Logic.Models.ReportGenerator.FindingLocalizer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Mapping")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("FindingLocalizers");
                });

            modelBuilder.Entity("RadioReport.Common.Module.Logic.Models.ReportGenerator.ReportSchema", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("BuildVersion")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<string>("Paragraphs")
                        .HasColumnType("text");

                    b.Property<string>("ReportTypeName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("VersionName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ReportTypeName", "VersionName")
                        .IsUnique();

                    b.ToTable("ReportSchemas");
                });

            modelBuilder.Entity("RadioReport.Common.Module.Logic.Models.ReportGenerator.ReportSchemaSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("LastActivity")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ReportSchemaId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ReportSchemaId")
                        .IsUnique();

                    b.ToTable("ReportSchemaSessions");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.AnamnesisPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte?>("BiopsyMonth")
                        .HasColumnType("smallint");

                    b.Property<int?>("BiopsyYear")
                        .HasColumnType("integer");

                    b.Property<int>("HormoneAblativeContinueType")
                        .HasColumnType("integer");

                    b.Property<byte?>("HormoneAblativeMonth")
                        .HasColumnType("smallint");

                    b.Property<int?>("HormoneAblativeYear")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCryptorchidismLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCryptorchidismRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHormoneAblative")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHypermenorrhea")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMenorrhagia")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMetrorrhagia")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNeoadjuvantTherapy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNeoadjuvantTherapyChemotherapy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNeoadjuvantTherapyRadiotherapy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRadiotherapy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTherapy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWeightChange")
                        .HasColumnType("boolean");

                    b.Property<int>("NeoadjuvantTherapyContinueType")
                        .HasColumnType("integer");

                    b.Property<byte?>("NeoadjuvantTherapyMonth")
                        .HasColumnType("smallint");

                    b.Property<int?>("NeoadjuvantTherapyYear")
                        .HasColumnType("integer");

                    b.Property<decimal?>("PSALevel")
                        .HasColumnType("numeric");

                    b.Property<byte?>("PSALevelTestMonth")
                        .HasColumnType("smallint");

                    b.Property<int?>("PSALevelTestYear")
                        .HasColumnType("integer");

                    b.Property<byte>("ParityType")
                        .HasColumnType("smallint");

                    b.Property<byte?>("PrevExaminationMonth")
                        .HasColumnType("smallint");

                    b.Property<int?>("PrevExaminationYear")
                        .HasColumnType("integer");

                    b.Property<int>("RadiotherapyContinueType")
                        .HasColumnType("integer");

                    b.Property<byte?>("RadiotherapyMonth")
                        .HasColumnType("smallint");

                    b.Property<int?>("RadiotherapyYear")
                        .HasColumnType("integer");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<byte>("WeightChangeType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("AnamnesisPages");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.BladderFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AffectedNerveType")
                        .HasColumnType("smallint");

                    b.Property<byte>("AffectedVesselUreterType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ArteriopathyType")
                        .HasColumnType("smallint");

                    b.Property<byte>("AscitesCharacterizationType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("BladderPageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("ClassificationMunichConsensusType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DescriptionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DetailsRuptureLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis1")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis2")
                        .HasColumnType("smallint");

                    b.Property<int?>("ExtensionInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("ExtrapelvicLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("GrowthPatternsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HematomaCharacterizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HeterogeneousType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("InfiltrativeGrowthType")
                        .HasColumnType("smallint");

                    b.Property<byte>("IntrapelvicLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsAnteriorWall")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsApophysitis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsArtifacts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAvulsionTuberosityTibiae")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBaseOfTheBladder")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBladderNeck")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBladderTamponade")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBladderrupture")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBloodClot")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBone")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBoneBruise")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalcification")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCapsuleMembrane")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCongenitalBladderFistula")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsContrastEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCrossDiameterOfRupture5OrMoreMm")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCrossDiameterOfRuptureLessThan5Mm")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCutan")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCysts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDetectionOfHemosiderin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDoubleJCatheterLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDoubleJCatheterRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExtraperitoneal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFascialLaceration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFat")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFattyDegeneration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFluidLevel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFusiformShape")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGanglion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHematoma")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemorrhage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfection")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInflammatoryReaction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInsertedBladderCatheter")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInterfacial")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntermuscular")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntracorticalEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntramuscular")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntraperitoneal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLeftLateralWall")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMarginSplitFatSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMass")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMoreThan1Lesion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMuscleAtrophy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMuscleHerniation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMuscleLesion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMuscularHypotrophy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNotSufficientBladderFilling")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOsseousAvulsion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPatentUrachus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPosteriorWall")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsProstate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectoUterinePouch")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectumSigma")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsReducedIschiofemoralSpace")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRetraction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRightLateralWall")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRoofOfBladder")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSeminalVesicles")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSepta")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSigma")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalIncreaseInPDAndT1w")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalVoids")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSkinExulceration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSmallIntestine")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSmoothMargins")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubordinate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSurroundingHematoma")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspicionOfMalignancy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsT1wIsointensToMuscleSignal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTrigonum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUrinaryBladder")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUterus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUterusVagina")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVagina")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVascular")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWavyCourseOfTheFibres")
                        .HasColumnType("boolean");

                    b.Property<byte>("LocalizationWithinMuscleType")
                        .HasColumnType("smallint");

                    b.Property<byte>("MarginType")
                        .HasColumnType("smallint");

                    b.Property<int?>("MaxDiameterInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("MaxExpansionInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("MorphologyTendinopathyType")
                        .HasColumnType("smallint");

                    b.Property<byte>("MuscleAtrophyType")
                        .HasColumnType("smallint");

                    b.Property<byte>("MusclesLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("OsseousAvulsionLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("PathologyAnatomicVariantsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("PeritonealNodulesCharacterizationType")
                        .HasColumnType("smallint");

                    b.Property<int?>("RetractionInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("SecondPlaneInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("SecondaryWallThickeningType")
                        .HasColumnType("smallint");

                    b.Property<int?>("ShortestDistanceInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("SideType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SoftTissueMassLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("T1wSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2wSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("TendonsLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("TendonsPathologyType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ThickeningLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<int?>("ThirdPlaneInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("TumorLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("VesselsUreterPathologyType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BladderPageId");

                    b.ToTable("BladderFindings");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.BladderFindingPreset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("ContrastEnhancementHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsCapsuleMembrane")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFluidLevel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInflammatoryReaction")
                        .HasColumnType("boolean");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("T1wSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2wSignal")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("BladderFindingPresets");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.BladderPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AreFindings")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("BladderPages");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.BonesFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AcetabularFractureNotFurtherSpecifiedType")
                        .HasColumnType("smallint");

                    b.Property<byte>("AnfhCortexType")
                        .HasColumnType("smallint");

                    b.Property<byte>("AnfhDifferentialDiagnosisType")
                        .HasColumnType("smallint");

                    b.Property<byte>("BoneWidthType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("BonesPageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("BursitisHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("BursitisLimitationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("BursitisLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ChondropathyIntensityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ClassificationAccordingToARCOType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ClassificationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementDistributionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("CorticalisType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DescriptionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis1")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis2")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis3")
                        .HasColumnType("smallint");

                    b.Property<byte>("DistributionType")
                        .HasColumnType("smallint");

                    b.Property<int?>("Expansion2ndLayerSizeInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("Expansion3rdLayerSizeInMm")
                        .HasColumnType("integer");

                    b.Property<int>("ExpansionHipLocalizer")
                        .HasColumnType("integer");

                    b.Property<int?>("ExpansionSizeInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("ExpansionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FaClassificationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FbClassificationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FbFractureFormA1SubType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FbFractureFormA2SubType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FbFractureFormA3SubType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FbFractureFormAType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FbFractureFormB1SubType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FbFractureFormB2SubType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FbFractureFormB3SubType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FbFractureFormBType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FbFractureFormC1SubType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FbFractureFormC2SubType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FbFractureFormC3SubType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FbFractureFormCType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FemoralHeadFractureFormType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FemoralNeckFractureFormType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FfsFractureFormType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FfsLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FpfClassificationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FpfNotFurtherSpecifiedType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FractureBothAbutmentsCompleteJointInvolvementType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FractureWallAbutmentPartialJointInvolvementType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FsfNotFurtherSpecifiedType")
                        .HasColumnType("smallint");

                    b.Property<int>("HipLocalizer")
                        .HasColumnType("integer");

                    b.Property<byte>("HistologicallySecuredType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ImpressionFractureType")
                        .HasColumnType("smallint");

                    b.Property<byte>("IntensityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("IntertrochantericType")
                        .HasColumnType("smallint");

                    b.Property<int?>("IntrabonyAbscessDiameterInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("IntrabonyAbscessSecondLayerInMm")
                        .HasColumnType("integer");

                    b.Property<bool>("IsAdjacentBoneMarrowEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAnotherLesion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAnterosuperior")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsArticularEffusion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsArticularSurfaceCollapseCortical")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBilateralDiagnosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBoneMarrowEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBoneMarrowEdemaOs")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBoneMarrowEdemaOsLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBoneMarrowEdemaOsRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCMEnhancementPerifocal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalcification")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalcificationCentral")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalcificationDiffuselyDistributed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCapT2wHyperintensity")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCartilageCap")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsChondropathy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsClassificationAccordingToARCO")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCoexistenceCoaxarthosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsContrastInSepta")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorrespondingHypointensityT1w")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDestruction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiaphyseal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDoubleLineCharacterT2w")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEpiphyseal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExpansive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFormBroadBased")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFormLobbied")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFormMaplikeConfiguration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFormOrientation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFormRoundly")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFormStored")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFreeJointBody")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGreaseSignal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemorrhage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemorrhagic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHistologicallySecured")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHypointenseLine")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfiltrationBoundary")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfiltrationSoftTissue")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntrabonyAbscess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInverselyRelatedToThe")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIrregularityJoint")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsJointEffusionLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsJointEffusionRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLabrumHypertrophy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLabrumLesion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLiquidFilledSubchondralGap")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLiquidLevel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLowSignalArea")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLowSignalLine")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMetaphyseal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMoreThanOneLesion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMuscleEdemaAdductors")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNidus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNidusT2wHyperintensity")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNoKMEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOsSacrum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOsSacrumLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOsSacrumRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOsteoblastic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOsteochondralFragment")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOsteoidMatrix")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOsteolysis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOsteolytic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOsteophytes")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParalabralCysts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPathologicalFracture")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPenumbraSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerifocalSclerosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeriostalReaction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeriostealOedema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeriostealSpur")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeriostealThickening")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeriostrupture")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeripheralCMEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPseudarthrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsQuantity")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectusAbdominisTendinopathy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectusAbdominisTendinopathyLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectusAbdominisTendinopathyRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRimLowSignal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSclerosingRim")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSclerotic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSecondaryCleftSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSecondaryCleftSignLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSecondaryCleftSignRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSedimentation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSeptetedOrChambered")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSequester")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSequesterMoreThanLesion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSoftTissueEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubchondralCysts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubchondralCystsGeodes")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubchondralFracture")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubchondralOedema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubchondralSclerosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubordinated")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubperiostealAbscess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSurroundingInflammatoryReaction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSynovialCyst")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSynovitis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsThinningScalopping")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTransientBoneMarrowEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWithinThePrimarilyAffectedBone")
                        .HasColumnType("boolean");

                    b.Property<byte>("LimitationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("LocalSpreadType")
                        .HasColumnType("smallint");

                    b.Property<byte>("LocalizationFemoralNeckType")
                        .HasColumnType("smallint");

                    b.Property<int?>("MaxDiameterInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("MeasurementCoronaryInDegrees")
                        .HasColumnType("integer");

                    b.Property<int?>("MeasurementSagittalinDegrees")
                        .HasColumnType("integer");

                    b.Property<byte>("MultiFragmentalPertrochantericType")
                        .HasColumnType("smallint");

                    b.Property<byte>("MultiFragmentaryFractureType")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("ODifferentialDiagnosisType")
                        .HasColumnType("smallint");

                    b.Property<int?>("OsteochondralFragmentInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("PelvicFractureNotFurtherSpecifiedType")
                        .HasColumnType("smallint");

                    b.Property<bool>("PeriostealBoneApposition")
                        .HasColumnType("boolean");

                    b.Property<byte>("QuantityType")
                        .HasColumnType("smallint");

                    b.Property<int?>("SequesterDiameterInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("ShearFractureAngleType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ShearFractureType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SideType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalT1w")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalT2w")
                        .HasColumnType("smallint");

                    b.Property<byte>("SimpleFractureType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SimplePertrochantericType")
                        .HasColumnType("smallint");

                    b.Property<int>("SingleSelectionTumorHipLocalizer")
                        .HasColumnType("integer");

                    b.Property<byte>("StadiumType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SubcapitalType")
                        .HasColumnType("smallint");

                    b.Property<int?>("SubperiostealAbscessLargestLesionAxialInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("TbmeDifferentialDiagnosisType")
                        .HasColumnType("smallint");

                    b.Property<byte>("TranscervicalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("TransverseFracturePartialJointInvolvementType")
                        .HasColumnType("smallint");

                    b.Property<byte>("TrochantericRegionFractureFormType")
                        .HasColumnType("smallint");

                    b.Property<byte>("TrochantericRuptureType")
                        .HasColumnType("smallint");

                    b.Property<byte>("WedgeFractureType")
                        .HasColumnType("smallint");

                    b.Property<byte>("WideEdemaMeasurementCoronaryType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BonesPageId");

                    b.ToTable("BonesFindings");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.BonesFindingPreset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("ContrastEnhancementDistributionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastHomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("CorticalisType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneityType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsAnotherLesion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBoneMarrowEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalcification")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalcificationCentral")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCartilageCap")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiaphyseal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEpiphyseal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExpansive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFormBroadBased")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFormLobbied")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFormMaplikeConfiguration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFormOrientation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFormRoundly")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFormStored")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGreaseSignal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfiltrationSoftTissue")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLiquidLevel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMetaphyseal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNidusT2wHyperintensity")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOsteoblastic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOsteoidMatrix")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOsteolytic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeriostalReaction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeriostealSpur")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRimLowSignal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSclerosingRim")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSclerotic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSeptetedOrChambered")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSoftTissueEdema")
                        .HasColumnType("boolean");

                    b.Property<byte>("LimitationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalT1w")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalT2w")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("BonesFindingPresets");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.BonesPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AreFindings")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("BonesPages");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.CMSideEffect", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("CMSideEffectType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DurationAdverseReactionType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsCompletelyDeclining")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSeriousAdverseEvent")
                        .HasColumnType("boolean");

                    b.Property<int?>("MinAfterCMinjection")
                        .HasColumnType("integer");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("TechnologyPageId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TechnologyPageId");

                    b.ToTable("CMSideEffects");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.ClinicFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AnamnesisPageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsAnemiaDueToBleeding")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBonePain")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDigitalRectalExam")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParadoxical")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPressurePainLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPressurePainLowerAbdomen")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPressurePainRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStressIncontinence")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUrgeIncontinence")
                        .HasColumnType("boolean");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("AnamnesisPageId");

                    b.ToTable("ClinicFindings");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.FemaleGenderFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AdditionalT1wSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("AdditionalT2wSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("ComplexCysticType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ComplicationsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementHomogenityType1")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementHomogenityType2")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementType1")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementType2")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementType3")
                        .HasColumnType("smallint");

                    b.Property<int?>("CraniocaudalInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("DceMriType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DegenerationType1")
                        .HasColumnType("smallint");

                    b.Property<byte>("DegenerationType2")
                        .HasColumnType("smallint");

                    b.Property<byte>("DepthOfInfiltrationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DescriptionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DetailsT2wSignalHomogenityType")
                        .HasColumnType("smallint");

                    b.Property<int?>("DiameterOfEndometrialMyometrialZoneInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("DiameterOfTheEndometriumInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("DifferentialDiagnosis")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis1")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis2")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosisType1")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosisType2")
                        .HasColumnType("smallint");

                    b.Property<byte>("EndometriosisLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<int?>("ExpansionInMm")
                        .HasColumnType("integer");

                    b.Property<Guid?>("FemaleGenderPageId")
                        .HasColumnType("uuid");

                    b.Property<int>("FigoClassificationLocation1")
                        .HasColumnType("integer");

                    b.Property<int>("FigoClassificationLocation2")
                        .HasColumnType("integer");

                    b.Property<byte>("FigoStageAdditionalDetailsType1")
                        .HasColumnType("smallint");

                    b.Property<byte>("FigoStageAdditionalDetailsType2")
                        .HasColumnType("smallint");

                    b.Property<byte>("FigoStageDetailsType1")
                        .HasColumnType("smallint");

                    b.Property<byte>("FigoStageDetailsType2")
                        .HasColumnType("smallint");

                    b.Property<byte>("FigoStageType1")
                        .HasColumnType("smallint");

                    b.Property<byte>("FigoStageType2")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FormType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HeterogeneousType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogenityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("IntactCervicalStromaRingHomogenityType")
                        .HasColumnType("smallint");

                    b.Property<bool>("Is1BMacroinvasiveLesion1")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is1BMacroinvasiveLesion2")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAbnormalVesselCollection")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAbscess1")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAbscess2")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAlteredInternalStructureCapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAnalSphincter")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAnusOrRectum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAscites")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAscitesT1wSignalIncrease")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAtTheLevelOfTheUreterostium")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBartholinitis1")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBartholinitis2")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBeakSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBridgingVesselSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalcification")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCapsuleOrPseudoCapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCentralNidus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCentralStromaEnlargement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCentripetalEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCervixUteri")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsClawSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsComplex")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsComplexCystic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsComplexCysticNodularParts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsContrastEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorpusUteri")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCranialDisplacementOfThePosteriorFornixVaginae")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCystOfSkenesGlands")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCystadenofibroma1")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCystadenofibroma2")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCystic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCysts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDegeneration1")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDegeneration2")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDetailsCapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDetailsT2wSignalIncrease")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDetectionOfACapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDetectionOfBloodClots")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffusionRestriction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDilatedLumen")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDisplacementOfIntestinalLoops")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnlarged")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnlargedOvary")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnlargementOfTheCentralAfollicularStromas")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExpansionBeyondTheCapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExtensionIntoTheLigamentumLatumUteri")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFat")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFistula")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFluidDebrisLevel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFluidLevel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFocal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFocalOrParietalT1wSignalIncrease")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFocalSignalVoidIntrauterine")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFocalSignalVoids")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFocalSignalVoidsInTheCervicalCanal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFocalThickening")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFollicularCysts1")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFollicularCysts2")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFourniersGangrene")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGeneralized")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHematoma")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHematosalpinx")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemorrhage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemosiderin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHeterogeneousNodularParts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHydrosalpinx")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHydrosalpinxT1wSignalIncrease")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHydroureter")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHypointenseCapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIleus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntactCervicalStromaRing")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntactRingOfTheCervicalStroma")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInternalBleeding")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntestine")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntraluminalFluid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntramural")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIpsilateralUterineDeviation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsKissingOvaries")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsKrukenbergTumor1")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsKrukenbergTumor2")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLigamentousThickening")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLobulated")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMarginal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMarkedCervicalVessels")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMarkedUterineVessels")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMoreThan1LesionSamePathology")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMucosalOrSubmucosal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMucosalOrSubmucosalPedunculated")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMultifocal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMultifocalSignalIncreaseT1w")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMultifocalSignalIncreaseT2w")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMushroomSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNodular")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsObstructionOfTheEndometrialCanal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOtherIntestineParts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOvarianMass")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOvarianVeinThrombosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOvary")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPID")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParametria")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParavaginalSoftTissue")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParietal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPelvicWall")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPelvisWall")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerifocalEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerifocalFatTissueObliteration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerifocalTighteningOrShortening")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerineum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeripheralFollicularDisplacement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeritonealContrastEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeritonealNodules")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeritoneum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPolycysticChanges")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPossiblySuperinfectedOrNecroticAreas")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPosteriorDisplacementOfTheOvaries")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPosteriorDisplacementOfTheUterus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPoststenoticCollapse")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPrestenoticDilatation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectouterinePouch")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectovaginal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSalpingitis1")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSalpingitis2")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSepta")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSeptaNodularParts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsShading")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalVoids")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSoftTissueSwelling")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSpicula")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubordinate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubserous")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubserousPedunculated")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSurroundingT2wSignalIncrease")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsT2wIncrease")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsT2wSignalIncrease")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsT2wSignalIncreasePerivascular")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsThickenedEndometrium")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsThickenedUterosacralLigaments")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTorsion1")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTorsion2")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTubes")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTuboovarianAbscess1")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTuboovarianAbscess2")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTwistedOvarianVessel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUnifocal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUreter")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUrethra")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUrethralDiverticula")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUrethralLeiomyoma1")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUrethralLeiomyoma2")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUrethralMetastasis1")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUrethralMetastasis2")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUrinaryBladder")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUterus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVagina")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVaginalDisplacement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVenousThrombosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVesicovaginal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWallThickening")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWideningOfTheInternalUterineOstium")
                        .HasColumnType("boolean");

                    b.Property<byte>("LabiaMajoraSideType")
                        .HasColumnType("smallint");

                    b.Property<byte>("LabiaMinoraSideType")
                        .HasColumnType("smallint");

                    b.Property<byte>("LocalizationOfMassType")
                        .HasColumnType("smallint");

                    b.Property<byte>("LocalizationSubType")
                        .HasColumnType("smallint");

                    b.Property<byte>("LocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("MarginType")
                        .HasColumnType("smallint");

                    b.Property<int?>("MucosalOrSubmucosalLengthInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("PeritonealNodulesType")
                        .HasColumnType("smallint");

                    b.Property<int?>("SecondPlaneInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("SecondPlaneOrthogonalInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("SideSubType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SideType")
                        .HasColumnType("smallint");

                    b.Property<int?>("SizeInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("SizeUterusAxialInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("SubperitonealInfiltrationType")
                        .HasColumnType("smallint");

                    b.Property<int?>("SubserousLengthInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("SurroundingDetailsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("T1wSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2wSignal")
                        .HasColumnType("smallint");

                    b.Property<int?>("ThirdPlaneInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("TransitionZoneType")
                        .HasColumnType("smallint");

                    b.Property<byte>("UterusLocation")
                        .HasColumnType("smallint");

                    b.Property<byte>("WideningObstructionType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("FemaleGenderPageId");

                    b.ToTable("FemaleGenderFindings");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.FemaleGenderFindingPreset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AdditionalT1wSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementHomogenityType1")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastEnhancementType1")
                        .HasColumnType("smallint");

                    b.Property<byte>("DegenerationType1")
                        .HasColumnType("smallint");

                    b.Property<byte>("DetailsT2wSignalHomogenityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FormType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HeterogeneousType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogenityType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsBridgingVesselSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalcification")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCapsuleOrPseudoCapsule")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsClawSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsComplexCystic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffusionRestriction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFocalSignalVoids")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFocalThickening")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemorrhage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHydrosalpinx")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSepta")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSeptaNodularParts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsT2wIncrease")
                        .HasColumnType("boolean");

                    b.Property<byte>("MarginType")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("T1wSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("T2wSignal")
                        .HasColumnType("smallint");

                    b.Property<byte>("TransitionZoneType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("FemaleGenderFindingPresets");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.FemaleGenderPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AreFindings")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("FemaleGenderPages");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.LocalizationPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("InvestigationType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDynamic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMultiparametric")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("LocalizationPages");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.LymphNodesFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FormType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("ImageFileId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Is10to12oclock")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is12to2")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is2to4oclock")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is4to6oclock")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is6to8oclock")
                        .HasColumnType("boolean");

                    b.Property<bool>("Is8to10oclock")
                        .HasColumnType("boolean");

                    b.Property<byte>("LimitationType")
                        .HasColumnType("smallint");

                    b.Property<int>("LocalizationType")
                        .HasColumnType("integer");

                    b.Property<Guid?>("LymphNodesPageId")
                        .HasColumnType("uuid");

                    b.Property<int?>("MaxShortAxisDiameter")
                        .HasColumnType("integer");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<string>("PictureNumber")
                        .HasColumnType("text");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ImageFileId")
                        .IsUnique();

                    b.HasIndex("LymphNodesPageId");

                    b.ToTable("LymphNodesFindings");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.LymphNodesPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AreFindings")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("LymphNodesPages");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.MaleGenderFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("CMEnhancementFocalPlaquesType")
                        .HasColumnType("smallint");

                    b.Property<byte>("CMEnhancementSeminalVesiclesMassType")
                        .HasColumnType("smallint");

                    b.Property<byte>("CMEnhancementType")
                        .HasColumnType("smallint");

                    b.Property<bool>("CorpusCavernosumLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("CorpusCavernosumRight")
                        .HasColumnType("boolean");

                    b.Property<byte>("DescriptionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosisInfection01Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosisInfection02Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosisMainFeatures01Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosisPenisMass01Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosisPenisMass02Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosisPenisTraumaType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosisScrotumInfectionInflammationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosisScrotumMassType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosisScrotumMassType01")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosisScrotumMassType02")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosisScrotumTraumaType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosisSeminalVesiclesMass01Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosisSeminalVesiclesMass02Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosisSeminalVesiclesMassMainFeatures01Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("DirectionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("EpididymisCMEnhancement")
                        .HasColumnType("smallint");

                    b.Property<byte>("EpididymisSignalT2wSliderType")
                        .HasColumnType("smallint");

                    b.Property<int?>("ExampleThicknessInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("ExpansionInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("ExpansionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FatType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FormType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogeneitySeminalVesiclesMassType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsAbscess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdjacentStructuresCorpusCavernosum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdjacentStructuresCorpusSpongiosum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdjacentTo")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAirFluidLevel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAirInclusions")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCentralNidus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCircumscribedFluidAccumulation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCircumscribedFluidCollection")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorpusCavernosumLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorpusCavernosumRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorpusSpongiosum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCremasterMuscle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCryptorchidismLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCryptorchidismRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCutaneousFistula")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCysticChanges")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCysticNecrotic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffuse")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffuseWallThickening")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffusionRestriction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDilatationOfSeminalVesicularTubules")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiscontinuityOfTheTunicaAlbuginea")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiscontinuityOfTheTunicaAlbugineaLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiscontinuityOfTheTunicaAlbugineaRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDistension")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDuctusDeferensLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDuctusDeferensRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEarlyArterialCmEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnlargedEpididymis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnlargedEpididymisLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnlargedEpididymisRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnlargedTesticle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnlargedTesticleLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnlargedTesticleRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEpididymis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEpididymitisFournierGangrene")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEpididymoorchitis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExulceration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFascialThickening")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFat")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFluidAroundProsthesis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFluidLevel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFocalPlaquesOfTheTunicaAlbuginea")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFocalSignalVoids")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFocalT2wCorpusCavernosumLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFocalT2wCorpusCavernosumRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHematocele")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHematoma")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHeterogeneous")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHeterogeneousEpididymis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHeterogeneousTesticles")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHomogeneous")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHomogeneousEpididymis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHomogeneousTesticles")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLiquidLevel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLobulated")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLocalizationCorpusCavernosumLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLocalizationCorpusCavernosumRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLocalizationCorpusSpongiosum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLooseBody")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMarginalCMEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNonDisplacing")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPampiniformPlexus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParietal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerifocalEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsProstate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsProsthesisDefect")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPyrocele")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsScrotal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsScrotalExpansion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsScrotalHematocele")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsScrotalPearl01")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsScrotalPearl02")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsScrotum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSeminalVesiculitis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSeptal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSeptations")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalLossFlowVoid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSinusTract")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSoftTissueEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSpermaticCordLipoma01")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSpermaticCordLipoma02")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubordinate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsT1wHypointense")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsT1wSignalBoost")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsT2wHypointense")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTesticles")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTesticularArtery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTesticularArteryLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTesticularArteryRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTesticularAtrophyLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTesticularAtrophyRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTunicaAlbuginea")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTunicaVaginalis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUrethra")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUrinaryBladder")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVasDeferens")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVascularAccumulation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVenousInfarction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWashout")
                        .HasColumnType("boolean");

                    b.Property<byte>("LocalizationOfTheNondescendedType")
                        .HasColumnType("smallint");

                    b.Property<byte>("MainFeaturesLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("MaleGenderPageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("MarginType")
                        .HasColumnType("smallint");

                    b.Property<byte>("NodularComponentsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("PenisMassCMEnhancementType")
                        .HasColumnType("smallint");

                    b.Property<byte>("PenisMassHomogeneity01Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("PenisMassHomogeneity02Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("ScrotumMassCMEnhancementType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ScrotumMassHomogeneity01Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("ScrotumMassHomogeneity02Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("ScrotumMassInternalChangeLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ScrotumMassLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ScrotumMassSignalT1wSliderType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ScrotumMassSignalT2wSliderType")
                        .HasColumnType("smallint");

                    b.Property<int?>("SecondPlaneInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("SeminalVesicleChannelType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SeminalVesiclesInfectionInflammationCmEnhancementType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SeminalVesiclesMassSignalT2wSliderType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SeptationsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalBehaviourT2wType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalLossFlowVoidType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalT1wSliderType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalT2wSliderType")
                        .HasColumnType("smallint");

                    b.Property<int?>("SizeInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("SurroundingSoftTissueCMEnhancement")
                        .HasColumnType("smallint");

                    b.Property<byte>("SurroundingSoftTissueSignalT1wSliderType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SurroundingSoftTissueSignalT2wSliderType")
                        .HasColumnType("smallint");

                    b.Property<byte>("TesticlesCMEnhancement")
                        .HasColumnType("smallint");

                    b.Property<byte>("TesticlesSignalT2wSliderType")
                        .HasColumnType("smallint");

                    b.Property<byte>("TesticlesType")
                        .HasColumnType("smallint");

                    b.Property<int?>("ThirdPlaneInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("TunicaAlbugineaType")
                        .HasColumnType("smallint");

                    b.Property<byte>("UrethraType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("MaleGenderPageId");

                    b.ToTable("MaleGenderFindings");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.MaleGenderFindingPreset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("DifferentialDiagnosisType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsCentralNidus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCysticChanges")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffusionRestriction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEpididymis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLiquidLevel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMarginalCMEnhancement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSeptations")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalLossFlowVoid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVascularAccumulation")
                        .HasColumnType("boolean");

                    b.Property<byte>("MainFeaturesLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("PenisMassCMEnhancementType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ScrotumMassCMEnhancementType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ScrotumMassHomogeneity01Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("ScrotumMassHomogeneity02Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("ScrotumMassLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ScrotumMassSignalT1wSliderType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ScrotumMassSignalT2wSliderType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SeptationsType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalLossFlowVoidType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalT1wSliderType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalT2wSliderType")
                        .HasColumnType("smallint");

                    b.Property<byte>("UrethraType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("MaleGenderFindingPresets");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.MaleGenderPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AreFindings")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("MaleGenderPages");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.PelvicFloorFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("AnorectalAngleAtRestInDegrees")
                        .HasColumnType("integer");

                    b.Property<int?>("AnorectalAngleDuringDefecationInDegrees")
                        .HasColumnType("integer");

                    b.Property<int?>("AnorectalAngleWhilePressingInDegrees")
                        .HasColumnType("integer");

                    b.Property<byte>("AnteriorRectoceleGradingInMm")
                        .HasColumnType("smallint");

                    b.Property<byte>("AnteriorRectocelePhaseType")
                        .HasColumnType("smallint");

                    b.Property<int?>("AnteriorUrethralAngulationInDegrees")
                        .HasColumnType("integer");

                    b.Property<byte>("CraniocaudalExtensioToPlcGradingInMm")
                        .HasColumnType("smallint");

                    b.Property<byte>("CraniocaudalExtensioToPlcPhaseType")
                        .HasColumnType("smallint");

                    b.Property<int?>("CraniocaudalExtensionInReferenceToMlpInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("CraniocaudalExtensionInReferenceToMlpPhaseType")
                        .HasColumnType("smallint");

                    b.Property<byte>("CraniocaudalExtensionInReferenceToMplGradingInMm")
                        .HasColumnType("smallint");

                    b.Property<byte>("CraniocaudalExtensionInReferenceToMplType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DescendingPelvicFloorGrading")
                        .HasColumnType("smallint");

                    b.Property<int?>("DescendingPelvicFloorInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("DescendingPelvicFloorPhaseType")
                        .HasColumnType("smallint");

                    b.Property<byte>("EnterocelePhaseType")
                        .HasColumnType("smallint");

                    b.Property<int?>("ExpansionInReferenceToAnteriorRectalWallInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HiatalExtensionGrading")
                        .HasColumnType("smallint");

                    b.Property<int?>("HiatalExtensionInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("HiatalExtensionPhaseType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HorizontalExpansionType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsAbsentPelvicFloorDescentAtDefecation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAnorectalAngle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAnteriorRectocele")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAnteriorUrethralAngulation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBladderSaddlebagSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCaudalAngulationOfLevatorPlate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCulDeSacFailureOfPassage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCystocele")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelayedDefecation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDescendingPelvicFloor")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEmphasizedPuborectalisMuscle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnterocele")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEversionOfTheVaginalWalls")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEvidenceOfLargeUterusMyoma")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFreeFluid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHiatalExtension")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHorizontalShiftOfTheVaginalAxis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIncarceration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIncompleteRectalEvacuation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIncreasedIntervalBetweenOpeningAndDefecation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInnerSphincterLesion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInnerSsl")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntraluminalCmRetentionAfterDefecation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLateralRectocele")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLesionMIliococcygeusLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLesionMIliococcygeusMuscle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLesionMIliococcygeusRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLesionMPubococygeusLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLesionMPubococygeusRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLesionMPuborectalisLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLesionMPuborectalisRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLesionOfOuterSphincterMuscle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLesionParaurethralLigament")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLesionParaurethralLigamentLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLesionParaurethralLigamentRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLesionParaurethralLigamentSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLesionPeriurethralLigament")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLesionPeriurethralLigamentLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLesionPeriurethralLigamentRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLesionPeriurethralLigamentSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLesionPubococygeusMuscle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLesionPuborectalisMuscle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMIliococcygeusSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMPubococygeusSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMPuborectalisSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOuterSsl")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerienericFreeFluid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerinealHernia")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeritoneocele")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPosteriorCompartmentFailureOfPassage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPosteriorDislocationOfTheVaginaFornix")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPosteriorRectocele")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPubourethralLigamentLesion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPubourethralLigamentLesionLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPubourethralLigamentLesionRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPubourethralLigamentLesionSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectalIntussusception")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSigmoidocele")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSigmoidoceleFailureOfPassage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSigmoidoceleIncarceration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSigmoidocelePerisigmoidalFluid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUrethrovesicalJunctionKinking")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUterineProlapseExceedingGenital")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUterineVaginalProlapse")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVaginaLossOfTheHShape")
                        .HasColumnType("boolean");

                    b.Property<byte>("LateralRectoceleDirectionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("LongitudinalExpansionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("MIliococcygeusLesionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("MPubococygeusLesionType")
                        .HasColumnType("smallint");

                    b.Property<int?>("MaxCraniocaudalExtensioToPlcInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("MaxMiddleCraniocaudalExtensionToPclInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("MiddleCraniocaudalExtensionToMplGradingInMm")
                        .HasColumnType("smallint");

                    b.Property<byte>("MiddleCraniocaudalExtensionToMplPhaseType")
                        .HasColumnType("smallint");

                    b.Property<byte>("MiddleCraniocaudalExtensionToPclGradingInMm")
                        .HasColumnType("smallint");

                    b.Property<byte>("MiddleCraniocaudalExtensionToPclPhaseType")
                        .HasColumnType("smallint");

                    b.Property<byte>("MiddleCraniocoudalExtensionMlpPositionType")
                        .HasColumnType("smallint");

                    b.Property<int?>("MiddleCraniocoudalExtensionToMPLInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<int?>("OpeningOfTheAnorectalAngleAtDefecation")
                        .HasColumnType("integer");

                    b.Property<Guid?>("PelvicFloorPageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("PeritoneocelePhaseType")
                        .HasColumnType("smallint");

                    b.Property<byte>("PuborectalisLesionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("RectalIntussusceptionType")
                        .HasColumnType("smallint");

                    b.Property<int?>("ReductionOfTheAnorectalAngleDuringPressing")
                        .HasColumnType("integer");

                    b.Property<byte>("SigmoidocelePhaseType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SslInnerType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SslLesionInnerSphincterMuscleType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SslLesionOuterSphincterMuscleType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SslOuterType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("PelvicFloorPageId");

                    b.ToTable("PelvicFloorFindings");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.PelvicFloorPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AreFindings")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("PelvicFloorPages");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.PreviousOperationFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AnamnesisPageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsAnusPraeter")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeep")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHartmannsRectalStump")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLeft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLeftPartial")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPouchReconstruction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRadical")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRightPartial")
                        .HasColumnType("boolean");

                    b.Property<byte?>("Month")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("SugicalProceduresType")
                        .HasColumnType("smallint");

                    b.Property<int?>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AnamnesisPageId");

                    b.ToTable("PreviousOperationFindings");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.ProstataFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AdcDiscreteType")
                        .HasColumnType("smallint");

                    b.Property<byte>("AdcHypointensityType")
                        .HasColumnType("smallint");

                    b.Property<int>("CentralZoneCZLocalizerType")
                        .HasColumnType("integer");

                    b.Property<byte>("DceMrtNegativeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis01")
                        .HasColumnType("smallint");

                    b.Property<byte>("DifferentialDiagnosis02")
                        .HasColumnType("smallint");

                    b.Property<byte>("DwiDiscreteType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DynamicContrastEnhancedType")
                        .HasColumnType("smallint");

                    b.Property<byte>("EjaculatoryDuctDirectionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ExtraprostaticGrowthType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomogenityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("IncreasedDwiSignalType")
                        .HasColumnType("smallint");

                    b.Property<byte>("IndexLesionType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsAdcHypointensity")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAlteredInternalStructure")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAnteriorFibromuscularStroma")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCentralZone")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDifferentialDiagnosis01GranulomatousProstatitis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDifferentialDiagnosis02GranulomatousProstatitis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDirectInfiltrationPerContinuitatem")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDisplacementOrDeformationInBph")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEjaculatoryDuct")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnlargedEjaculatoryDuctWithT2wSignalReduction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsErasedCharcoalSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExternalUrethrasphincter")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFocalOrDiffuseT2wSignalReduction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIncreasedDwiSignal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfiltrationSpiculated")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLentiform")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMembranousUrethra")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNeurovascularBundle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsObliterationOfProstateSeminalVesicleAngle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsProstaticUrethra")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPseudocapsularBulgingSpiculated")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSeminalVesicles")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSeparateFocalT2wSignalReduction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSignalLossFlowVoid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspicionOf01")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspicionOf02")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTypicalBphNode")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUrinaryBladder")
                        .HasColumnType("boolean");

                    b.Property<decimal>("LocalizationT1wSignalEnhancementType")
                        .HasColumnType("numeric(20,0)");

                    b.Property<byte>("MarginType")
                        .HasColumnType("smallint");

                    b.Property<byte>("NeurovascularBundleDirectionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("PatternType")
                        .HasColumnType("smallint");

                    b.Property<byte>("PenetrationOfPseudocapsuleType")
                        .HasColumnType("smallint");

                    b.Property<int>("PeripheralZonePZLocalizerType")
                        .HasColumnType("integer");

                    b.Property<byte>("PiradsScoreSizeType")
                        .HasColumnType("smallint");

                    b.Property<int?>("PiradsScoreTotal")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ProstataPageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("SeminalVesiclesDirectionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SideAsymmetryType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SignalPowerType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SliderPiradasScoreType")
                        .HasColumnType("smallint");

                    b.Property<byte>("TransitionaZoneTZCapsuleType")
                        .HasColumnType("smallint");

                    b.Property<int>("TransitionaZoneTZLocalizerType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProstataPageId");

                    b.ToTable("ProstataFindings");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.ProstataPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("APdiameterInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("AreFindings")
                        .HasColumnType("smallint");

                    b.Property<int?>("HeightInMm")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("PsaVolume")
                        .HasColumnType("numeric");

                    b.Property<byte>("PsaVolumeType")
                        .HasColumnType("smallint");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("VolumeInCm3")
                        .HasColumnType("numeric");

                    b.Property<byte>("VolumeType")
                        .HasColumnType("smallint");

                    b.Property<int?>("WidthInMm")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("ProstataPages");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.RectumFinding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("AbscessMaximumDiameter")
                        .HasColumnType("integer");

                    b.Property<byte>("AbscessMaximumDiameterType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ActivityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("AppendicitisInflammationStageType")
                        .HasColumnType("smallint");

                    b.Property<byte>("AppendicitisInternalChangeSubType")
                        .HasColumnType("smallint");

                    b.Property<byte>("AppendicitisInternalChangeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("AppendicitisKMEnhancementType")
                        .HasColumnType("smallint");

                    b.Property<byte>("AppendictisDifferentialDiagnosisType")
                        .HasColumnType("smallint");

                    b.Property<int?>("AxialExpansion")
                        .HasColumnType("integer");

                    b.Property<byte>("ChronicBowelDiseaseDifferentialDiagnosisType01")
                        .HasColumnType("smallint");

                    b.Property<byte>("ChronicBowelDiseaseDifferentialDiagnosisType02")
                        .HasColumnType("smallint");

                    b.Property<byte>("ChronicBowelDiseaseKMEnhancementType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ChronicBowelKmEnhancementFormType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ClassificationOfDiverticularDiseaseSubType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ClassificationOfDiverticularDiseaseType")
                        .HasColumnType("smallint");

                    b.Property<byte>("CmEnhancementInternalChangeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ComplicationsFistulaType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DiameterInfiltratedVeinType")
                        .HasColumnType("smallint");

                    b.Property<int?>("DiameterOfTheAppendix")
                        .HasColumnType("integer");

                    b.Property<byte>("DifferentialDiagnosisTStadiumType")
                        .HasColumnType("smallint");

                    b.Property<int?>("DistanceToPectinateLine")
                        .HasColumnType("integer");

                    b.Property<int?>("EpiploicAppendagitisDiameterInMm")
                        .HasColumnType("integer");

                    b.Property<byte>("EpiploicAppendagitisDifferentialDiagnosisType")
                        .HasColumnType("smallint");

                    b.Property<byte>("EpiploicAppendagitisLocalizationType")
                        .HasColumnType("smallint");

                    b.Property<int?>("Expansion2ndPlane")
                        .HasColumnType("integer");

                    b.Property<int?>("Expansion3rdPlane")
                        .HasColumnType("integer");

                    b.Property<int?>("ExpansionInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("ExpansionSize")
                        .HasColumnType("integer");

                    b.Property<byte>("FindingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FistulaEndType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FistulaInternalChangeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FistulaKMEnhancementType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FistulaLocalizationSSLType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FistulaLocalizer")
                        .HasColumnType("smallint");

                    b.Property<byte>("FistulaMorphologyType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FistulaType")
                        .HasColumnType("smallint");

                    b.Property<byte>("FormType")
                        .HasColumnType("smallint");

                    b.Property<byte>("GrowthPatternType")
                        .HasColumnType("smallint");

                    b.Property<byte>("HansenAndStockType")
                        .HasColumnType("smallint");

                    b.Property<bool>("HighT2wSignalIntensityMucinous")
                        .HasColumnType("boolean");

                    b.Property<byte>("InfiltrationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("InternalChangeType")
                        .HasColumnType("smallint");

                    b.Property<byte>("IntestinalWallThickeningType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsAbdomenPelvicWall")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAbscess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAbsenceOfASeparatingFatLamellaBetweenBladderAndColon")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAccompanyingAscites")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAccompanyingInflammatoryPsoas")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdditionalFistulaBranches")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdhesions")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdjacentSoftTissueEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAirInTheUrinaryBladder")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAnalChannel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAnalSphincterInvolvement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAppendicolith")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsArrowheadSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBlindEnding")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCecalBarSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCecalWallThickening")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsClassificationOfDiverticularDisease")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCmEnhancementOfThePerifocalSoftTissue")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCoccygis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCoffeeBeanSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsColon")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCombSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConglomerate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDiffusionRestriction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDilatation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDistanceToPectinateLine")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEdema")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExtramuralVenousInfiltration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFatEquivalentMass")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFatTissueProliferation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFatTissueStranding")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFistula")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFistulaAfterRadiotherapyChemotherapy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFistulaAfterSurgery")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFistulaInMalignantSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFistulaInMalignantTumor")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFluidAndAirInVaginalFornix")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFocalPerifocalAdhesions")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFocalPerifocalFibrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFocalWallThickening")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFocalWallThickeningColon")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFocalWallThickeningUrinaryBladder")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFreeAir")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFreeFluid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFreePerforation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHansenAndStock")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHemorrhagic")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIleum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIleus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIncreasedEnhancementOfIntestinalWall")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfiltrationOfExternalSphicter")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfiltrationOfInternalSphicter")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInfiltrationOfLevatorMuscle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInflamedDiverticulum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntestinalWallNecroses")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntestinalWallThickening")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIntraluminalFluid")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInvagination")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInvaginationIleus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInvaginationPoststenoticCollapse")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInvaginationPrestenoticDilatation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInvolvementMLevatorAnMuscle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInvolvementOfAnalSphincters")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInvolvementOfTheIschioanalFossa")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsKMEnhancementInTheEnvironment")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLeftExternalIliacVessels")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLevatorAniMuscle")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLossHaustration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLowerThird")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLymphadenopathy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMAniExternus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMAniInternus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMSphincterAni")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMarkedVasaRecta")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMesentericFatObliteration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMesentericFatStranding")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMiddlePeritonealFoldInfiltration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMiddleThird")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMoreThanOneLesion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsObliterationOfSurroundingTissue")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOcclusive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOsteomyelitis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerforation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerifocal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeritonealInvolvement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeritoneum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPeritonitis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPerityphliticAbscess")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPhlegmons")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPossibleCtGuidedDrainage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPostinflammatoryFistulaTract")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsProstate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPseudotumor")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSacrum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSeminalVesicles")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSigmoidColon")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSmallIntestine")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSphincter")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStenosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStenosisIleus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStenosisPoststenoticCollapse")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStenosisPrestenoticDilatation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStratification")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStricture")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubcutaneousFatTissueSacrococcygeal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubmucosalStripe")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubordinated")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuspicionOf")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsT2wSignalBoostInPerifocal")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsT2wSignalBoostOfIntestinalWall")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsT2wSignalElevation")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTargetSign")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsThickenedMesoappendix")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsThickening")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsThickeningAdjacentToPeritoneum")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsThickeningAdjacentToWall")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsToxicMegacolon")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTumorNecrosis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTumourRecurrence")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUpperPeritonealFoldInfiltration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUpperThird")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUrinaryBladder")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUterineCervix")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUterus")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVagina")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWallEdemaOfIntestinalSegments")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWhirlSign")
                        .HasColumnType("boolean");

                    b.Property<int?>("LengthOfTheAppendix")
                        .HasColumnType("integer");

                    b.Property<int?>("LengthOfTheFistula")
                        .HasColumnType("integer");

                    b.Property<byte>("LocalizationAxialType")
                        .HasColumnType("smallint");

                    b.Property<byte>("LocationAccordingToSslType")
                        .HasColumnType("smallint");

                    b.Property<byte>("LocationCraniocaudalType")
                        .HasColumnType("smallint");

                    b.Property<int?>("LongitudinalExpansion")
                        .HasColumnType("integer");

                    b.Property<byte>("LowRectalCancerType")
                        .HasColumnType("smallint");

                    b.Property<byte>("MarginType")
                        .HasColumnType("smallint");

                    b.Property<int?>("MaxAbscessDiameter")
                        .HasColumnType("integer");

                    b.Property<int?>("MaxLongitudinalExpansion")
                        .HasColumnType("integer");

                    b.Property<int?>("MaximumCcExpansion")
                        .HasColumnType("integer");

                    b.Property<int?>("MaximumDiameterInMm")
                        .HasColumnType("integer");

                    b.Property<int?>("MaximumDilatation")
                        .HasColumnType("integer");

                    b.Property<int?>("MaximumExtramuralTumorExtension")
                        .HasColumnType("integer");

                    b.Property<int?>("MaximumLength")
                        .HasColumnType("integer");

                    b.Property<int?>("MaximumTumourDiameter")
                        .HasColumnType("integer");

                    b.Property<int?>("MaximumWallThickness")
                        .HasColumnType("integer");

                    b.Property<byte>("MinimumDistanceToMesorectalFasciaType")
                        .HasColumnType("smallint");

                    b.Property<bool>("MoreThan2CmPosteriorToTheAnus")
                        .HasColumnType("boolean");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("NumberOfDiverticulaType")
                        .HasColumnType("smallint");

                    b.Property<byte>("PathologyType")
                        .HasColumnType("smallint");

                    b.Property<byte>("PatternsOfInflammationType")
                        .HasColumnType("smallint");

                    b.Property<int?>("PuborectalisMuscleDistance")
                        .HasColumnType("integer");

                    b.Property<byte>("QuantityType")
                        .HasColumnType("smallint");

                    b.Property<byte>("RectalCancerCraniallyToPuborectalisType")
                        .HasColumnType("smallint");

                    b.Property<byte>("RectalCarcinomaMorphologyType")
                        .HasColumnType("smallint");

                    b.Property<byte>("RectumCircumferencialTumorLocationType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("RectumPageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("RelationToPuborectalisMuscleType")
                        .HasColumnType("smallint");

                    b.Property<int?>("SigmaMassDiameter")
                        .HasColumnType("integer");

                    b.Property<byte>("SigmaMassDifferentialDiagnosis02Type")
                        .HasColumnType("smallint");

                    b.Property<byte>("SigmaMassDifferentialDiagnosisType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SigmaMassKmEnhancementType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SigmaMassPerforationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SigmoidDiverticularDiseaseDifferentialDiagnosisType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SigmoidDiverticularDiseasePerforationType")
                        .HasColumnType("smallint");

                    b.Property<int?>("SingularDiverticulaDiameter")
                        .HasColumnType("integer");

                    b.Property<byte>("StJamesClassificationType")
                        .HasColumnType("smallint");

                    b.Property<int?>("ThickeningSize")
                        .HasColumnType("integer");

                    b.Property<byte>("TstadiumInfiltrationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("TumorGrowthOverMuscularisType")
                        .HasColumnType("smallint");

                    b.Property<byte>("WallAlterationType")
                        .HasColumnType("smallint");

                    b.Property<int?>("WallThickening")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RectumPageId");

                    b.ToTable("RectumFindings");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.RectumPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AreFindings")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("RectumPages");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.Sequence", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Is3D")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsADCMap")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsB0")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsB100")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsB1000")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsB1400")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsB50")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsB800")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCalculated")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCineImaging")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDefaecography")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHighResolution")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsParallelImaging")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPostContrast")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSaturatedFat")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubtraction")
                        .HasColumnType("boolean");

                    b.Property<byte>("Number")
                        .HasColumnType("smallint");

                    b.Property<byte>("OrientationType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SequenceType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("TechnologyPageId")
                        .HasColumnType("uuid");

                    b.Property<byte>("WeightingType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("TechnologyPageId");

                    b.ToTable("Sequences");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.SummaryPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("BiopsyRecommendedType")
                        .HasColumnType("smallint");

                    b.Property<byte>("BladderCarcinomaNStageType")
                        .HasColumnType("smallint");

                    b.Property<byte>("DynamicsOfFinding")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBiopsyRecommended")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCtAbdomen")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCtThorax")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEvaluationInInterdisciplinaryTumorBoard")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMriAbdomen")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPetCt")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSkeletalScintigraphy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSpectCt")
                        .HasColumnType("boolean");

                    b.Property<byte>("MRIFollowUpType")
                        .HasColumnType("smallint");

                    b.Property<int?>("PiradsScoreTotal")
                        .HasColumnType("integer");

                    b.Property<byte>("ProcedureType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ProstateCarcinomaMStageType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ProstateCarcinomaNStageType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ProstateCarcinomaTStageType")
                        .HasColumnType("smallint");

                    b.Property<byte>("RectalCancerNStageType")
                        .HasColumnType("smallint");

                    b.Property<byte>("RectalCancerTStageType")
                        .HasColumnType("smallint");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<byte>("SigmoidColonNStageType")
                        .HasColumnType("smallint");

                    b.Property<byte>("SigmoidColonTStageType")
                        .HasColumnType("smallint");

                    b.Property<byte>("TNStagingType")
                        .HasColumnType("smallint");

                    b.Property<byte>("TumorRegressionGradeTRG")
                        .HasColumnType("smallint");

                    b.Property<byte>("bladderCarcinomaTStageType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("SummaryPages");
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.TechnologyPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BarcodeCMCharge")
                        .HasColumnType("text");

                    b.Property<byte>("CMReinforcedType")
                        .HasColumnType("smallint");

                    b.Property<byte>("ContrastMediumType")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("ContrastQuantity")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCMSideEffect")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsChemicalShift")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCortisoneIV")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsH1BlockerIV")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsH2BlockerIV")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIncorrectSubtraction")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMetalArtifacts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMotion")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNotFurtherSpecified")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsO2Administration")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOralContrast")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOther")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPulsationOrBreathing")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRectalContrast")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSpasmolysis")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubcutaneousEpinephrine")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSusceptibilityArtifacts")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVaginalContrast")
                        .HasColumnType("boolean");

                    b.Property<byte>("MagneticFieldStrengthType")
                        .HasColumnType("smallint");

                    b.Property<byte>("PositionType")
                        .HasColumnType("smallint");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<byte>("SequencesType")
                        .HasColumnType("smallint");

                    b.Property<string>("SetName")
                        .HasColumnType("text");

                    b.Property<byte>("SpasmolysisType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("ReportId")
                        .IsUnique();

                    b.ToTable("TechnologyPages");
                });

            modelBuilder.Entity("RadioReport.Common.Logic.Models.PageInfo", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany("Pages")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.Common.Logic.Models.ReportModels.ReportResult", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany("ReportResults")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.Common.Module.Logic.Models.Pages.PatientInformation", b =>
                {
                    b.HasOne("RadioReport.PelvisMRT.Domain.Models.LocalizationPage", null)
                        .WithOne("PatientInformation")
                        .HasForeignKey("RadioReport.Common.Module.Logic.Models.Pages.PatientInformation", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.Common.Module.Logic.Models.ReportGenerator.ReportSchemaSession", b =>
                {
                    b.HasOne("RadioReport.Common.Module.Logic.Models.ReportGenerator.ReportSchema", null)
                        .WithOne("Session")
                        .HasForeignKey("RadioReport.Common.Module.Logic.Models.ReportGenerator.ReportSchemaSession", "ReportSchemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.AnamnesisPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.BladderFinding", b =>
                {
                    b.HasOne("RadioReport.PelvisMRT.Domain.Models.BladderPage", null)
                        .WithMany("Findings")
                        .HasForeignKey("BladderPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.BladderPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.BonesFinding", b =>
                {
                    b.HasOne("RadioReport.PelvisMRT.Domain.Models.BonesPage", null)
                        .WithMany("Findings")
                        .HasForeignKey("BonesPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.BonesPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.CMSideEffect", b =>
                {
                    b.HasOne("RadioReport.PelvisMRT.Domain.Models.TechnologyPage", null)
                        .WithMany("CMSideEffects")
                        .HasForeignKey("TechnologyPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.ClinicFinding", b =>
                {
                    b.HasOne("RadioReport.PelvisMRT.Domain.Models.AnamnesisPage", null)
                        .WithMany("ClinicFindings")
                        .HasForeignKey("AnamnesisPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.FemaleGenderFinding", b =>
                {
                    b.HasOne("RadioReport.PelvisMRT.Domain.Models.FemaleGenderPage", null)
                        .WithMany("Findings")
                        .HasForeignKey("FemaleGenderPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.FemaleGenderPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.LocalizationPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.LymphNodesFinding", b =>
                {
                    b.HasOne("RadioReport.Common.Module.Logic.Models.Pages.ImageFile", "UploadedImageFile")
                        .WithOne()
                        .HasForeignKey("RadioReport.PelvisMRT.Domain.Models.LymphNodesFinding", "ImageFileId");

                    b.HasOne("RadioReport.PelvisMRT.Domain.Models.LymphNodesPage", null)
                        .WithMany("Findings")
                        .HasForeignKey("LymphNodesPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.LymphNodesPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.MaleGenderFinding", b =>
                {
                    b.HasOne("RadioReport.PelvisMRT.Domain.Models.MaleGenderPage", null)
                        .WithMany("Findings")
                        .HasForeignKey("MaleGenderPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.MaleGenderPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.PelvicFloorFinding", b =>
                {
                    b.HasOne("RadioReport.PelvisMRT.Domain.Models.PelvicFloorPage", null)
                        .WithMany("Findings")
                        .HasForeignKey("PelvicFloorPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.PelvicFloorPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.PreviousOperationFinding", b =>
                {
                    b.HasOne("RadioReport.PelvisMRT.Domain.Models.AnamnesisPage", null)
                        .WithMany("PreviousOperationFindings")
                        .HasForeignKey("AnamnesisPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.ProstataFinding", b =>
                {
                    b.HasOne("RadioReport.PelvisMRT.Domain.Models.ProstataPage", null)
                        .WithMany("Findings")
                        .HasForeignKey("ProstataPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.ProstataPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.RectumFinding", b =>
                {
                    b.HasOne("RadioReport.PelvisMRT.Domain.Models.RectumPage", null)
                        .WithMany("Findings")
                        .HasForeignKey("RectumPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.RectumPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.Sequence", b =>
                {
                    b.HasOne("RadioReport.PelvisMRT.Domain.Models.TechnologyPage", null)
                        .WithMany("Sequences")
                        .HasForeignKey("TechnologyPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.SummaryPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioReport.PelvisMRT.Domain.Models.TechnologyPage", b =>
                {
                    b.HasOne("RadioReport.Common.Logic.Models.ReportModels.Report", null)
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
